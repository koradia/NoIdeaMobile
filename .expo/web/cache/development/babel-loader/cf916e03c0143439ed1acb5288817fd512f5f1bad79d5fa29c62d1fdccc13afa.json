{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from \"react\";\nimport Appbartab from \"../components/Appbartab\";\nimport YoutubePlayer from \"react-native-youtube-iframe\";\nimport { Button } from \"react-native-paper\";\nimport Bottombar from \"../components/Bottombar\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('screen'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar Videoscrn = function Videoscrn() {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    playing = _useState2[0],\n    setPlaying = _useState2[1];\n  var togglePlaying = function togglePlaying() {\n    setPlaying(function (prev) {\n      return !prev;\n    });\n  };\n  var onStateChange = function onStateChange(state) {\n    if (state === 'ended') {\n      setPlaying(false);\n      alert('video has finished playing!');\n    }\n  };\n  return _jsxs(View, {\n    children: [_jsx(Appbartab, {}), _jsxs(View, {\n      style: {\n        margin: 20\n      },\n      children: [_jsx(Text, {\n        children: \"for meditation\"\n      }), _jsx(YoutubePlayer, {\n        height: 200,\n        play: playing,\n        videoId: \"wruCWicGBA4\",\n        onChangeState: onStateChange\n      })]\n    }), _jsxs(View, {\n      style: {\n        margin: 20\n      },\n      children: [_jsx(Text, {\n        children: \"for meditation\"\n      }), _jsx(YoutubePlayer, {\n        height: 200,\n        play: playing,\n        videoId: \"wruCWicGBA4\",\n        onChangeState: onStateChange\n      })]\n    }), _jsx(View, {\n      style: {\n        marginTop: height * .21\n      },\n      children: _jsx(Bottombar, {})\n    })]\n  });\n};\nexport default Videoscrn;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useState","Appbartab","YoutubePlayer","Button","Bottombar","Dimensions","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","Videoscrn","_useState","_useState2","_slicedToArray","playing","setPlaying","togglePlaying","prev","onStateChange","state","alert","View","children","style","margin","Text","play","videoId","onChangeState","marginTop","styles","StyleSheet","create"],"sources":["D:/project/module/module/screens/Videoscrn.js"],"sourcesContent":["import { StyleSheet, Text, View } from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport Appbartab from \"../components/Appbartab\";\r\nimport YoutubePlayer from \"react-native-youtube-iframe\";\r\nimport { Button } from \"react-native-paper\";\r\nimport Bottombar from \"../components/Bottombar\";\r\nimport { Dimensions } from \"react-native\";\r\n\r\nconst {width, height} =Dimensions.get('screen');\r\n\r\nconst Videoscrn = () => {\r\n  const [playing, setPlaying] = useState();\r\n\r\n  const togglePlaying = () => {\r\n    setPlaying((prev) => !prev);\r\n  };\r\n\r\n  const onStateChange = (state) => {\r\n    if (state === 'ended') {\r\n        setPlaying(false);\r\n        alert('video has finished playing!');\r\n    }\r\n};\r\n  \r\n  return (\r\n    <View>\r\n      <Appbartab />\r\n      <View style={{ margin: 20 }}>\r\n        <Text>for meditation</Text>\r\n        <YoutubePlayer height={200} play={playing} videoId={\"wruCWicGBA4\"} onChangeState={onStateChange} />\r\n        {/* <Button mode=\"contained\" title={playing ? \"pause\" : \"play\"} onPress={togglePlaying} >Play</Button> */}\r\n      </View>\r\n\r\n      <View style={{ margin: 20 }}>\r\n        <Text>for meditation</Text>\r\n        <YoutubePlayer height={200} play={playing} videoId={\"wruCWicGBA4\"} onChangeState={onStateChange} />\r\n        {/* <Button mode=\"contained\" title={playing ? \"pause\" : \"play\"} onPress={togglePlaying} >Play</Button> */}\r\n      </View>\r\n        <View style={{marginTop:height*.21}}>\r\n      <Bottombar />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Videoscrn;\r\n\r\nconst styles = StyleSheet.create({});\r\n"],"mappings":";;;;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS;AAChB,OAAOC,aAAa,MAAM,6BAA6B;AACvD,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,OAAOC,SAAS;AAAgC,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGhD,IAAAC,eAAA,GAAuBL,UAAU,CAACM,GAAG,CAAC,QAAQ,CAAC;EAAxCC,KAAK,GAAAF,eAAA,CAALE,KAAK;EAAEC,MAAM,GAAAH,eAAA,CAANG,MAAM;AAEpB,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EACtB,IAAAC,SAAA,GAA8Bf,QAAQ,EAAE;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAE1B,IAAMI,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IAC1BD,UAAU,CAAC,UAACE,IAAI;MAAA,OAAK,CAACA,IAAI;IAAA,EAAC;EAC7B,CAAC;EAED,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,KAAK,EAAK;IAC/B,IAAIA,KAAK,KAAK,OAAO,EAAE;MACnBJ,UAAU,CAAC,KAAK,CAAC;MACjBK,KAAK,CAAC,6BAA6B,CAAC;IACxC;EACJ,CAAC;EAEC,OACEf,KAAA,CAACgB,IAAI;IAAAC,QAAA,GACHnB,IAAA,CAACN,SAAS,KAAG,EACbQ,KAAA,CAACgB,IAAI;MAACE,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAG,CAAE;MAAAF,QAAA,GAC1BnB,IAAA,CAACsB,IAAI;QAAAH,QAAA,EAAC;MAAc,EAAO,EAC3BnB,IAAA,CAACL,aAAa;QAACW,MAAM,EAAE,GAAI;QAACiB,IAAI,EAAEZ,OAAQ;QAACa,OAAO,EAAE,aAAc;QAACC,aAAa,EAAEV;MAAc,EAAG;IAAA,EAE9F,EAEPb,KAAA,CAACgB,IAAI;MAACE,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAG,CAAE;MAAAF,QAAA,GAC1BnB,IAAA,CAACsB,IAAI;QAAAH,QAAA,EAAC;MAAc,EAAO,EAC3BnB,IAAA,CAACL,aAAa;QAACW,MAAM,EAAE,GAAI;QAACiB,IAAI,EAAEZ,OAAQ;QAACa,OAAO,EAAE,aAAc;QAACC,aAAa,EAAEV;MAAc,EAAG;IAAA,EAE9F,EACLf,IAAA,CAACkB,IAAI;MAACE,KAAK,EAAE;QAACM,SAAS,EAACpB,MAAM,GAAC;MAAG,CAAE;MAAAa,QAAA,EACtCnB,IAAA,CAACH,SAAS;IAAG,EACN;EAAA,EACF;AAEX,CAAC;AAED,eAAeU,SAAS;AAExB,IAAMoB,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}