{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import*as React from'react';import I18nManager from\"react-native-web/dist/exports/I18nManager\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{useInternalTheme}from\"../../core/theming\";import MaterialCommunityIcon from\"../MaterialCommunityIcon\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import Text from\"../Typography/Text\";import{ListAccordionGroupContext}from\"./ListAccordionGroup\";import{getAccordionColors}from\"./utils\";var ListAccordion=function ListAccordion(_ref){var _theme$colors,_theme$colors2;var left=_ref.left,right=_ref.right,title=_ref.title,description=_ref.description,children=_ref.children,themeOverrides=_ref.theme,titleStyle=_ref.titleStyle,descriptionStyle=_ref.descriptionStyle,_ref$titleNumberOfLin=_ref.titleNumberOfLines,titleNumberOfLines=_ref$titleNumberOfLin===void 0?1:_ref$titleNumberOfLin,_ref$descriptionNumbe=_ref.descriptionNumberOfLines,descriptionNumberOfLines=_ref$descriptionNumbe===void 0?2:_ref$descriptionNumbe,style=_ref.style,id=_ref.id,testID=_ref.testID,onPress=_ref.onPress,onLongPress=_ref.onLongPress,delayLongPress=_ref.delayLongPress,expandedProp=_ref.expanded,accessibilityLabel=_ref.accessibilityLabel,_ref$pointerEvents=_ref.pointerEvents,pointerEvents=_ref$pointerEvents===void 0?'none':_ref$pointerEvents;var theme=useInternalTheme(themeOverrides);var _React$useState=React.useState(expandedProp||false),_React$useState2=_slicedToArray(_React$useState,2),expanded=_React$useState2[0],setExpanded=_React$useState2[1];var handlePressAction=function handlePressAction(e){onPress===null||onPress===void 0?void 0:onPress(e);if(expandedProp===undefined){setExpanded(function(expanded){return!expanded;});}};var expandedInternal=expandedProp!==undefined?expandedProp:expanded;var groupContext=React.useContext(ListAccordionGroupContext);if(groupContext!==null&&!id){throw new Error('List.Accordion is used inside a List.AccordionGroup without specifying an id prop.');}var isExpanded=groupContext?groupContext.expandedId===id:expandedInternal;var _getAccordionColors=getAccordionColors({theme:theme,isExpanded:isExpanded}),titleColor=_getAccordionColors.titleColor,descriptionColor=_getAccordionColors.descriptionColor,titleTextColor=_getAccordionColors.titleTextColor,rippleColor=_getAccordionColors.rippleColor;var handlePress=groupContext&&id!==undefined?function(){return groupContext.onAccordionPress(id);}:handlePressAction;return React.createElement(View,null,React.createElement(View,{style:{backgroundColor:theme===null||theme===void 0?void 0:(_theme$colors=theme.colors)===null||_theme$colors===void 0?void 0:_theme$colors.background}},React.createElement(TouchableRipple,{style:[styles.container,style],onPress:handlePress,onLongPress:onLongPress,delayLongPress:delayLongPress,rippleColor:rippleColor,accessibilityRole:\"button\",accessibilityState:{expanded:isExpanded},accessibilityLabel:accessibilityLabel,testID:testID,theme:theme,borderless:true},React.createElement(View,{style:styles.row,pointerEvents:pointerEvents},left?left({color:isExpanded?(_theme$colors2=theme.colors)===null||_theme$colors2===void 0?void 0:_theme$colors2.primary:descriptionColor}):null,React.createElement(View,{style:[styles.item,styles.content]},React.createElement(Text,{selectable:false,numberOfLines:titleNumberOfLines,style:[styles.title,{color:titleTextColor},titleStyle]},title),description?React.createElement(Text,{selectable:false,numberOfLines:descriptionNumberOfLines,style:[styles.description,{color:descriptionColor},descriptionStyle]},description):null),React.createElement(View,{style:[styles.item,description?styles.multiline:undefined]},right?right({isExpanded:isExpanded}):React.createElement(MaterialCommunityIcon,{name:isExpanded?'chevron-up':'chevron-down',color:theme.isV3?descriptionColor:titleColor,size:24,direction:I18nManager.getConstants().isRTL?'rtl':'ltr'}))))),isExpanded?React.Children.map(children,function(child){if(left&&React.isValidElement(child)&&!child.props.left&&!child.props.right){return React.cloneElement(child,{style:[styles.child,child.props.style],theme:theme});}return child;}):null);};ListAccordion.displayName='List.Accordion';var styles=StyleSheet.create({container:{padding:8},row:{flexDirection:'row',alignItems:'center'},multiline:{height:40,alignItems:'center',justifyContent:'center'},title:{fontSize:16},description:{fontSize:14},item:{margin:8},child:{paddingLeft:64},content:{flex:1,justifyContent:'center'}});export default ListAccordion;","map":{"version":3,"names":["React","I18nManager","StyleSheet","View","useInternalTheme","MaterialCommunityIcon","TouchableRipple","Text","ListAccordionGroupContext","getAccordionColors","ListAccordion","_ref","_theme$colors","_theme$colors2","left","right","title","description","children","themeOverrides","theme","titleStyle","descriptionStyle","_ref$titleNumberOfLin","titleNumberOfLines","_ref$descriptionNumbe","descriptionNumberOfLines","style","id","testID","onPress","onLongPress","delayLongPress","expandedProp","expanded","accessibilityLabel","_ref$pointerEvents","pointerEvents","_React$useState","useState","_React$useState2","_slicedToArray","setExpanded","handlePressAction","e","undefined","expandedInternal","groupContext","useContext","Error","isExpanded","expandedId","_getAccordionColors","titleColor","descriptionColor","titleTextColor","rippleColor","handlePress","onAccordionPress","createElement","backgroundColor","colors","background","styles","container","accessibilityRole","accessibilityState","borderless","row","color","primary","item","content","selectable","numberOfLines","multiline","name","isV3","size","direction","getConstants","isRTL","Children","map","child","isValidElement","props","cloneElement","displayName","create","padding","flexDirection","alignItems","height","justifyContent","fontSize","margin","paddingLeft","flex"],"sources":["D:\\project\\module\\module\\node_modules\\react-native-paper\\src\\components\\List\\ListAccordion.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  I18nManager,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { ListAccordionGroupContext } from './ListAccordionGroup';\nimport { getAccordionColors } from './utils';\n\nexport type Props = {\n  /**\n   * Title text for the list accordion.\n   */\n  title: React.ReactNode;\n  /**\n   * Description text for the list accordion.\n   */\n  description?: React.ReactNode;\n  /**\n   * Callback which returns a React element to display on the left side.\n   */\n  left?: (props: { color: string }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to display on the right side.\n   */\n  right?: (props: { isExpanded: boolean }) => React.ReactNode;\n  /**\n   * Whether the accordion is expanded\n   * If this prop is provided, the accordion will behave as a \"controlled component\".\n   * You'll need to update this prop when you want to toggle the component or on `onPress`.\n   */\n  expanded?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * The number of milliseconds a user must touch the element before executing `onLongPress`.\n   */\n  delayLongPress?: number;\n  /**\n   * Content of the section.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Style that is passed to the wrapping TouchableRipple element.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Title element.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Style that is passed to Description element.\n   */\n  descriptionStyle?: StyleProp<TextStyle>;\n  /**\n   * Truncate Title text such that the total number of lines does not\n   * exceed this number.\n   */\n  titleNumberOfLines?: number;\n  /**\n   * Truncate Description text such that the total number of lines does not\n   * exceed this number.\n   */\n  descriptionNumberOfLines?: number;\n  /**\n   * Id is used for distinguishing specific accordion when using List.AccordionGroup. Property is required when using List.AccordionGroup and has no impact on behavior when using standalone List.Accordion.\n   */\n  id?: string | number;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * Accessibility label for the TouchableRipple. This is read by the screen reader when the user taps the touchable.\n   */\n  accessibilityLabel?: string;\n  /**\n   * `pointerEvents` passed to the `View` container\n   */\n  pointerEvents?: ViewProps['pointerEvents'];\n};\n\n/**\n * A component used to display an expandable list item.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/list-accordion-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-accordion-2.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-accordion-3.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [expanded, setExpanded] = React.useState(true);\n *\n *   const handlePress = () => setExpanded(!expanded);\n *\n *   return (\n *     <List.Section title=\"Accordions\">\n *       <List.Accordion\n *         title=\"Uncontrolled Accordion\"\n *         left={props => <List.Icon {...props} icon=\"folder\" />}>\n *         <List.Item title=\"First item\" />\n *         <List.Item title=\"Second item\" />\n *       </List.Accordion>\n *\n *       <List.Accordion\n *         title=\"Controlled Accordion\"\n *         left={props => <List.Icon {...props} icon=\"folder\" />}\n *         expanded={expanded}\n *         onPress={handlePress}>\n *         <List.Item title=\"First item\" />\n *         <List.Item title=\"Second item\" />\n *       </List.Accordion>\n *     </List.Section>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst ListAccordion = ({\n  left,\n  right,\n  title,\n  description,\n  children,\n  theme: themeOverrides,\n  titleStyle,\n  descriptionStyle,\n  titleNumberOfLines = 1,\n  descriptionNumberOfLines = 2,\n  style,\n  id,\n  testID,\n  onPress,\n  onLongPress,\n  delayLongPress,\n  expanded: expandedProp,\n  accessibilityLabel,\n  pointerEvents = 'none',\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const [expanded, setExpanded] = React.useState<boolean>(\n    expandedProp || false\n  );\n\n  const handlePressAction = (e: GestureResponderEvent) => {\n    onPress?.(e);\n\n    if (expandedProp === undefined) {\n      // Only update state of the `expanded` prop was not passed\n      // If it was passed, the component will act as a controlled component\n      setExpanded((expanded) => !expanded);\n    }\n  };\n\n  const expandedInternal = expandedProp !== undefined ? expandedProp : expanded;\n\n  const groupContext = React.useContext(ListAccordionGroupContext);\n  if (groupContext !== null && !id) {\n    throw new Error(\n      'List.Accordion is used inside a List.AccordionGroup without specifying an id prop.'\n    );\n  }\n  const isExpanded = groupContext\n    ? groupContext.expandedId === id\n    : expandedInternal;\n\n  const { titleColor, descriptionColor, titleTextColor, rippleColor } =\n    getAccordionColors({\n      theme,\n      isExpanded,\n    });\n\n  const handlePress =\n    groupContext && id !== undefined\n      ? () => groupContext.onAccordionPress(id)\n      : handlePressAction;\n  return (\n    <View>\n      <View style={{ backgroundColor: theme?.colors?.background }}>\n        <TouchableRipple\n          style={[styles.container, style]}\n          onPress={handlePress}\n          onLongPress={onLongPress}\n          delayLongPress={delayLongPress}\n          rippleColor={rippleColor}\n          accessibilityRole=\"button\"\n          accessibilityState={{ expanded: isExpanded }}\n          accessibilityLabel={accessibilityLabel}\n          testID={testID}\n          theme={theme}\n          borderless\n        >\n          <View style={styles.row} pointerEvents={pointerEvents}>\n            {left\n              ? left({\n                  color: isExpanded ? theme.colors?.primary : descriptionColor,\n                })\n              : null}\n            <View style={[styles.item, styles.content]}>\n              <Text\n                selectable={false}\n                numberOfLines={titleNumberOfLines}\n                style={[\n                  styles.title,\n                  {\n                    color: titleTextColor,\n                  },\n                  titleStyle,\n                ]}\n              >\n                {title}\n              </Text>\n              {description ? (\n                <Text\n                  selectable={false}\n                  numberOfLines={descriptionNumberOfLines}\n                  style={[\n                    styles.description,\n                    {\n                      color: descriptionColor,\n                    },\n                    descriptionStyle,\n                  ]}\n                >\n                  {description}\n                </Text>\n              ) : null}\n            </View>\n            <View\n              style={[styles.item, description ? styles.multiline : undefined]}\n            >\n              {right ? (\n                right({\n                  isExpanded: isExpanded,\n                })\n              ) : (\n                <MaterialCommunityIcon\n                  name={isExpanded ? 'chevron-up' : 'chevron-down'}\n                  color={theme.isV3 ? descriptionColor : titleColor}\n                  size={24}\n                  direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n                />\n              )}\n            </View>\n          </View>\n        </TouchableRipple>\n      </View>\n\n      {isExpanded\n        ? React.Children.map(children, (child) => {\n            if (\n              left &&\n              React.isValidElement(child) &&\n              !child.props.left &&\n              !child.props.right\n            ) {\n              return React.cloneElement(child as React.ReactElement<any>, {\n                style: [styles.child, child.props.style],\n                theme,\n              });\n            }\n\n            return child;\n          })\n        : null}\n    </View>\n  );\n};\n\nListAccordion.displayName = 'List.Accordion';\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  multiline: {\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 16,\n  },\n  description: {\n    fontSize: 14,\n  },\n  item: {\n    margin: 8,\n  },\n  child: {\n    paddingLeft: 64,\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n});\n\nexport default ListAccordion;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}