{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import color from'color';var getBorderColor=function getBorderColor(_ref){var theme=_ref.theme,disabled=_ref.disabled;if(theme.isV3){if(disabled){return theme.colors.surfaceDisabled;}return theme.colors.outline;}return undefined;};var getBackgroundColor=function getBackgroundColor(_ref2){var theme=_ref2.theme,isMode=_ref2.isMode,disabled=_ref2.disabled,selected=_ref2.selected,customContainerColor=_ref2.customContainerColor;if(theme.isV3){if(disabled){if(isMode('contained')||isMode('contained-tonal')){return theme.colors.surfaceDisabled;}}if(typeof customContainerColor!=='undefined'){return customContainerColor;}if(isMode('contained')){if(selected){return theme.colors.primary;}return theme.colors.surfaceVariant;}if(isMode('contained-tonal')){if(selected){return theme.colors.secondaryContainer;}return theme.colors.surfaceVariant;}if(isMode('outlined')){if(selected){return theme.colors.inverseSurface;}}}if(typeof customContainerColor!=='undefined'){return customContainerColor;}return undefined;};var getIconColor=function getIconColor(_ref3){var theme=_ref3.theme,isMode=_ref3.isMode,disabled=_ref3.disabled,selected=_ref3.selected,customIconColor=_ref3.customIconColor;if(theme.isV3){if(disabled){return theme.colors.onSurfaceDisabled;}if(typeof customIconColor!=='undefined'){return customIconColor;}if(isMode('contained')){if(selected){return theme.colors.onPrimary;}return theme.colors.primary;}if(isMode('contained-tonal')){if(selected){return theme.colors.onSecondaryContainer;}return theme.colors.onSurfaceVariant;}if(isMode('outlined')){if(selected){return theme.colors.inverseOnSurface;}return theme.colors.onSurfaceVariant;}if(selected){return theme.colors.primary;}return theme.colors.onSurfaceVariant;}if(typeof customIconColor!=='undefined'){return customIconColor;}return theme.colors.text;};var getRippleColor=function getRippleColor(_ref4){var theme=_ref4.theme,iconColor=_ref4.iconColor;if(theme.isV3){return color(iconColor).alpha(0.12).rgb().string();}return color(iconColor).alpha(0.32).rgb().string();};export var getIconButtonColor=function getIconButtonColor(_ref5){var theme=_ref5.theme,disabled=_ref5.disabled,mode=_ref5.mode,selected=_ref5.selected,customIconColor=_ref5.customIconColor,customContainerColor=_ref5.customContainerColor;var isMode=function isMode(modeToCompare){return mode===modeToCompare;};var baseIconColorProps={theme:theme,isMode:isMode,disabled:disabled,selected:selected};var iconColor=getIconColor(_objectSpread(_objectSpread({},baseIconColorProps),{},{customIconColor:customIconColor}));return{iconColor:iconColor,backgroundColor:getBackgroundColor(_objectSpread(_objectSpread({},baseIconColorProps),{},{customContainerColor:customContainerColor})),rippleColor:getRippleColor({theme:theme,iconColor:iconColor}),borderColor:getBorderColor({theme:theme,disabled:disabled})};};","map":{"version":3,"names":["color","getBorderColor","_ref","theme","disabled","isV3","colors","surfaceDisabled","outline","undefined","getBackgroundColor","_ref2","isMode","selected","customContainerColor","primary","surfaceVariant","secondaryContainer","inverseSurface","getIconColor","_ref3","customIconColor","onSurfaceDisabled","onPrimary","onSecondaryContainer","onSurfaceVariant","inverseOnSurface","text","getRippleColor","_ref4","iconColor","alpha","rgb","string","getIconButtonColor","_ref5","mode","modeToCompare","baseIconColorProps","_objectSpread","backgroundColor","rippleColor","borderColor"],"sources":["D:\\project\\module\\module\\node_modules\\react-native-paper\\src\\components\\IconButton\\utils.ts"],"sourcesContent":["import color from 'color';\n\nimport type { InternalTheme } from '../../types';\n\ntype IconButtonMode = 'outlined' | 'contained' | 'contained-tonal';\n\ntype BaseProps = {\n  theme: InternalTheme;\n  isMode: (mode: IconButtonMode) => boolean;\n  disabled?: boolean;\n  selected?: boolean;\n};\n\nconst getBorderColor = ({\n  theme,\n  disabled,\n}: {\n  theme: InternalTheme;\n  disabled?: boolean;\n}) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.surfaceDisabled;\n    }\n\n    return theme.colors.outline;\n  }\n\n  return undefined;\n};\n\nconst getBackgroundColor = ({\n  theme,\n  isMode,\n  disabled,\n  selected,\n  customContainerColor,\n}: BaseProps & { customContainerColor?: string }) => {\n  if (theme.isV3) {\n    if (disabled) {\n      if (isMode('contained') || isMode('contained-tonal')) {\n        return theme.colors.surfaceDisabled;\n      }\n    }\n\n    if (typeof customContainerColor !== 'undefined') {\n      return customContainerColor;\n    }\n\n    if (isMode('contained')) {\n      if (selected) {\n        return theme.colors.primary;\n      }\n      return theme.colors.surfaceVariant;\n    }\n\n    if (isMode('contained-tonal')) {\n      if (selected) {\n        return theme.colors.secondaryContainer;\n      }\n      return theme.colors.surfaceVariant;\n    }\n\n    if (isMode('outlined')) {\n      if (selected) {\n        return theme.colors.inverseSurface;\n      }\n    }\n  }\n\n  if (typeof customContainerColor !== 'undefined') {\n    return customContainerColor;\n  }\n\n  return undefined;\n};\n\nconst getIconColor = ({\n  theme,\n  isMode,\n  disabled,\n  selected,\n  customIconColor,\n}: BaseProps & { customIconColor?: string }) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (typeof customIconColor !== 'undefined') {\n      return customIconColor;\n    }\n\n    if (isMode('contained')) {\n      if (selected) {\n        return theme.colors.onPrimary;\n      }\n      return theme.colors.primary;\n    }\n\n    if (isMode('contained-tonal')) {\n      if (selected) {\n        return theme.colors.onSecondaryContainer;\n      }\n      return theme.colors.onSurfaceVariant;\n    }\n\n    if (isMode('outlined')) {\n      if (selected) {\n        return theme.colors.inverseOnSurface;\n      }\n      return theme.colors.onSurfaceVariant;\n    }\n\n    if (selected) {\n      return theme.colors.primary;\n    }\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (typeof customIconColor !== 'undefined') {\n    return customIconColor;\n  }\n\n  return theme.colors.text;\n};\n\nconst getRippleColor = ({\n  theme,\n  iconColor,\n}: {\n  theme: InternalTheme;\n  iconColor: string;\n}) => {\n  if (theme.isV3) {\n    return color(iconColor).alpha(0.12).rgb().string();\n  }\n  return color(iconColor).alpha(0.32).rgb().string();\n};\n\nexport const getIconButtonColor = ({\n  theme,\n  disabled,\n  mode,\n  selected,\n  customIconColor,\n  customContainerColor,\n}: {\n  theme: InternalTheme;\n  disabled?: boolean;\n  selected?: boolean;\n  mode?: IconButtonMode;\n  customIconColor?: string;\n  customContainerColor?: string;\n}) => {\n  const isMode = (modeToCompare: IconButtonMode) => {\n    return mode === modeToCompare;\n  };\n\n  const baseIconColorProps = {\n    theme,\n    isMode,\n    disabled,\n    selected,\n  };\n\n  const iconColor = getIconColor({\n    ...baseIconColorProps,\n    customIconColor,\n  });\n\n  return {\n    iconColor,\n    backgroundColor: getBackgroundColor({\n      ...baseIconColorProps,\n      customContainerColor,\n    }),\n    rippleColor: getRippleColor({ theme, iconColor }),\n    borderColor: getBorderColor({ theme, disabled }),\n  };\n};\n"],"mappings":"w0BAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAazB,GAAM,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAGC,IAAA,CAMjB,IALJ,CAAAC,KAAK,CAKND,IAAA,CALCC,KAAK,CACLC,QAAA,CAIDF,IAAA,CAJCE,QAAA,CAKA,GAAID,KAAK,CAACE,IAAI,CAAE,CACd,GAAID,QAAQ,CAAE,CACZ,MAAO,CAAAD,KAAK,CAACG,MAAM,CAACC,eAAe,CACrC,CAEA,MAAO,CAAAJ,KAAK,CAACG,MAAM,CAACE,OAAO,CAC7B,CAEA,MAAO,CAAAC,SAAS,CAClB,CAAC,CAED,GAAM,CAAAC,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAGC,KAAA,CAM0B,IALnD,CAAAR,KAAK,CAKyCQ,KAAA,CAL9CR,KAAK,CACLS,MAAM,CAIwCD,KAAA,CAJ9CC,MAAM,CACNR,QAAQ,CAGsCO,KAAA,CAH9CP,QAAQ,CACRS,QAAQ,CAEsCF,KAAA,CAF9CE,QAAQ,CACRC,oBAAA,CAC8CH,KAAA,CAD9CG,oBAAA,CAEA,GAAIX,KAAK,CAACE,IAAI,CAAE,CACd,GAAID,QAAQ,CAAE,CACZ,GAAIQ,MAAM,CAAC,WAAW,CAAC,EAAIA,MAAM,CAAC,iBAAiB,CAAC,CAAE,CACpD,MAAO,CAAAT,KAAK,CAACG,MAAM,CAACC,eAAe,CACrC,CACF,CAEA,GAAI,MAAO,CAAAO,oBAAoB,GAAK,WAAW,CAAE,CAC/C,MAAO,CAAAA,oBAAoB,CAC7B,CAEA,GAAIF,MAAM,CAAC,WAAW,CAAC,CAAE,CACvB,GAAIC,QAAQ,CAAE,CACZ,MAAO,CAAAV,KAAK,CAACG,MAAM,CAACS,OAAO,CAC7B,CACA,MAAO,CAAAZ,KAAK,CAACG,MAAM,CAACU,cAAc,CACpC,CAEA,GAAIJ,MAAM,CAAC,iBAAiB,CAAC,CAAE,CAC7B,GAAIC,QAAQ,CAAE,CACZ,MAAO,CAAAV,KAAK,CAACG,MAAM,CAACW,kBAAkB,CACxC,CACA,MAAO,CAAAd,KAAK,CAACG,MAAM,CAACU,cAAc,CACpC,CAEA,GAAIJ,MAAM,CAAC,UAAU,CAAC,CAAE,CACtB,GAAIC,QAAQ,CAAE,CACZ,MAAO,CAAAV,KAAK,CAACG,MAAM,CAACY,cAAc,CACpC,CACF,CACF,CAEA,GAAI,MAAO,CAAAJ,oBAAoB,GAAK,WAAW,CAAE,CAC/C,MAAO,CAAAA,oBAAoB,CAC7B,CAEA,MAAO,CAAAL,SAAS,CAClB,CAAC,CAED,GAAM,CAAAU,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAGC,KAAA,CAM2B,IAL9C,CAAAjB,KAAK,CAKoCiB,KAAA,CALzCjB,KAAK,CACLS,MAAM,CAImCQ,KAAA,CAJzCR,MAAM,CACNR,QAAQ,CAGiCgB,KAAA,CAHzChB,QAAQ,CACRS,QAAQ,CAEiCO,KAAA,CAFzCP,QAAQ,CACRQ,eAAA,CACyCD,KAAA,CADzCC,eAAA,CAEA,GAAIlB,KAAK,CAACE,IAAI,CAAE,CACd,GAAID,QAAQ,CAAE,CACZ,MAAO,CAAAD,KAAK,CAACG,MAAM,CAACgB,iBAAiB,CACvC,CAEA,GAAI,MAAO,CAAAD,eAAe,GAAK,WAAW,CAAE,CAC1C,MAAO,CAAAA,eAAe,CACxB,CAEA,GAAIT,MAAM,CAAC,WAAW,CAAC,CAAE,CACvB,GAAIC,QAAQ,CAAE,CACZ,MAAO,CAAAV,KAAK,CAACG,MAAM,CAACiB,SAAS,CAC/B,CACA,MAAO,CAAApB,KAAK,CAACG,MAAM,CAACS,OAAO,CAC7B,CAEA,GAAIH,MAAM,CAAC,iBAAiB,CAAC,CAAE,CAC7B,GAAIC,QAAQ,CAAE,CACZ,MAAO,CAAAV,KAAK,CAACG,MAAM,CAACkB,oBAAoB,CAC1C,CACA,MAAO,CAAArB,KAAK,CAACG,MAAM,CAACmB,gBAAgB,CACtC,CAEA,GAAIb,MAAM,CAAC,UAAU,CAAC,CAAE,CACtB,GAAIC,QAAQ,CAAE,CACZ,MAAO,CAAAV,KAAK,CAACG,MAAM,CAACoB,gBAAgB,CACtC,CACA,MAAO,CAAAvB,KAAK,CAACG,MAAM,CAACmB,gBAAgB,CACtC,CAEA,GAAIZ,QAAQ,CAAE,CACZ,MAAO,CAAAV,KAAK,CAACG,MAAM,CAACS,OAAO,CAC7B,CACA,MAAO,CAAAZ,KAAK,CAACG,MAAM,CAACmB,gBAAgB,CACtC,CAEA,GAAI,MAAO,CAAAJ,eAAe,GAAK,WAAW,CAAE,CAC1C,MAAO,CAAAA,eAAe,CACxB,CAEA,MAAO,CAAAlB,KAAK,CAACG,MAAM,CAACqB,IAAI,CAC1B,CAAC,CAED,GAAM,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAGC,KAAA,CAMjB,IALJ,CAAA1B,KAAK,CAKN0B,KAAA,CALC1B,KAAK,CACL2B,SAAA,CAIDD,KAAA,CAJCC,SAAA,CAKA,GAAI3B,KAAK,CAACE,IAAI,CAAE,CACd,MAAO,CAAAL,KAAK,CAAC8B,SAAS,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,EAAE,CAACC,MAAM,EAAE,CACpD,CACA,MAAO,CAAAjC,KAAK,CAAC8B,SAAS,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,EAAE,CAACC,MAAM,EAAE,CACpD,CAAC,CAED,MAAO,IAAM,CAAAC,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAGC,KAAA,CAc5B,IAbJ,CAAAhC,KAAK,CAaNgC,KAAA,CAbChC,KAAK,CACLC,QAAQ,CAYT+B,KAAA,CAZC/B,QAAQ,CACRgC,IAAI,CAWLD,KAAA,CAXCC,IAAI,CACJvB,QAAQ,CAUTsB,KAAA,CAVCtB,QAAQ,CACRQ,eAAe,CAShBc,KAAA,CATCd,eAAe,CACfP,oBAAA,CAQDqB,KAAA,CARCrB,oBAAA,CASA,GAAM,CAAAF,MAAM,CAAI,QAAV,CAAAA,MAAMA,CAAIyB,aAA6B,CAAK,CAChD,MAAO,CAAAD,IAAI,GAAKC,aAAa,CAC/B,CAAC,CAED,GAAM,CAAAC,kBAAkB,CAAG,CACzBnC,KAAK,CAALA,KAAK,CACLS,MAAM,CAANA,MAAM,CACNR,QAAQ,CAARA,QAAQ,CACRS,QAAA,CAAAA,QACF,CAAC,CAED,GAAM,CAAAiB,SAAS,CAAGX,YAAY,CAAAoB,aAAA,CAAAA,aAAA,IACzBD,kBAAkB,MACrBjB,eAAA,CAAAA,eAAA,GACA,CAEF,MAAO,CACLS,SAAS,CAATA,SAAS,CACTU,eAAe,CAAE9B,kBAAkB,CAAA6B,aAAA,CAAAA,aAAA,IAC9BD,kBAAkB,MACrBxB,oBAAA,CAAAA,oBAAA,GACA,CACF2B,WAAW,CAAEb,cAAc,CAAC,CAAEzB,KAAK,CAALA,KAAK,CAAE2B,SAAA,CAAAA,SAAU,CAAC,CAAC,CACjDY,WAAW,CAAEzC,cAAc,CAAC,CAAEE,KAAK,CAALA,KAAK,CAAEC,QAAA,CAAAA,QAAS,CAAC,CACjD,CAAC,CACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}