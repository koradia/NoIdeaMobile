{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport FormInput from \"../components/FormInput\";\nimport FormButton from \"../components/FormButton\";\nimport SocialButton from \"../components/SocialButton\";\nimport { useState } from \"react\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Radio from \"../components/Radiobuttons\";\nimport DatePicker from \"react-native-datepicker\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { RadioGroup } from \"react-native-radio-buttons-group\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useNavigationParam } from \"@react-navigation/native\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar img3 = {\n  uri: \"https://i.ibb.co/WvcQTtK/imgbg.jpg\"\n};\nvar radioButtonsData = [{\n  id: \"1\",\n  label: \"Male\",\n  value: \"M\"\n}, {\n  id: \"2\",\n  label: \"Female\",\n  value: \"F\"\n}];\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar Adddetails = function Adddetails(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    phnumber = _useState2[0],\n    setPhnumber = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    address = _useState4[0],\n    setAddress = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    datePicker = _useState6[0],\n    setDatePicker = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    kg = _useState8[0],\n    setKg = _useState8[1];\n  var _useState9 = useState(),\n    _useState10 = _slicedToArray(_useState9, 2),\n    ht = _useState10[0],\n    setHt = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    gen = _useState12[0],\n    setGen = _useState12[1];\n  var _useState13 = useState(new Date()),\n    _useState14 = _slicedToArray(_useState13, 2),\n    date = _useState14[0],\n    setDate = _useState14[1];\n  var _useState15 = useState(),\n    _useState16 = _slicedToArray(_useState15, 2),\n    bg = _useState16[0],\n    setBg = _useState16[1];\n  var onhandlesubmit = function () {\n    var _ref2 = _asyncToGenerator(function* (e) {\n      if (phnumber == null || address == null || kg == null || hr == null || gen == null || bg == null) {\n        console.log(\"please enter all the details\");\n      } else {\n        e.preventDefault();\n        var result = yield axios.post(\"http://172.16.138.189:8080/pat/savedetail\", {\n          pid: id,\n          name: name,\n          phone: phnumber,\n          address: address,\n          email: email,\n          photolink: null,\n          score: null,\n          bDate: null,\n          gender: gen,\n          weight: parseInt(kg.substring(0), 10),\n          height: parseInt(ht.substring(0), 10),\n          journal: null\n        });\n        if (result.status == 200) {\n          navigation.navigate('Login');\n        }\n      }\n    });\n    return function onhandlesubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  function showDatePicker() {\n    setDatePicker(true);\n  }\n  function onDateSelected(event, value) {\n    setDate(value);\n    setDatePicker(false);\n  }\n  var _useState17 = useState(radioButtonsData),\n    _useState18 = _slicedToArray(_useState17, 2),\n    radioButtons = _useState18[0],\n    setRadioButtons = _useState18[1];\n  function onPressRadioButton(radioButtonsArray) {\n    setRadioButtons(radioButtonsArray);\n    if (radioButtonsArray[0].selected == true) {\n      setGen(1);\n    } else {\n      setGen(0);\n    }\n  }\n  var _route$params = route.params,\n    id = _route$params.id,\n    name = _route$params.name,\n    email = _route$params.email;\n  return _jsx(ScrollView, {\n    children: _jsx(ImageBackground, {\n      source: img3,\n      resizeMode: \"cover\",\n      style: {\n        justifyContent: \"center\"\n      },\n      imageStyle: {\n        width: width,\n        height: height * 1.2,\n        borderRadius: 5\n      },\n      children: _jsxs(View, {\n        children: [_jsx(View, {\n          style: {\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            alignContent: \"center\"\n          },\n          children: _jsx(Image, {\n            style: styles.logo,\n            source: require(\"../images/logoori.png\")\n          })\n        }), _jsxs(Text, {\n          style: {\n            textAlign: 'center',\n            fontSize: 20\n          },\n          children: [\"Hi \", name, \"! \", '\\n', \"Enter Your details \"]\n        }), _jsxs(View, {\n          style: {\n            paddingTop: 20,\n            alignItems: \"center\"\n          },\n          children: [_jsx(View, {\n            children: _jsx(FormInput, {\n              labelValue: phnumber,\n              onChangeText: function onChangeText(userPhnumber) {\n                return setPhnumber(userPhnumber);\n              },\n              placeholderText: \"Contact Number\",\n              iconType: \"phone\",\n              keyboardType: \"phone-pad\",\n              autoCapitalize: \"none\",\n              autoCorrect: false\n            })\n          }), _jsx(View, {\n            children: datePicker && _jsx(DateTimePicker, {\n              value: date,\n              mode: \"date\",\n              display: Platform.OS === \"ios\" ? \"spinner\" : \"default\",\n              is24Hour: true,\n              onChange: onDateSelected,\n              style: styleSheet.datePicker\n            })\n          }), _jsx(View, {\n            children: _jsx(FormInput, {\n              labelValue: address,\n              onChangeText: function onChangeText(useradd) {\n                return setAddress(useradd);\n              },\n              placeholderText: \"Address\",\n              iconType: \"home\",\n              keyboardType: \"address\",\n              autoCapitalize: \"none\",\n              autoCorrect: false\n            })\n          }), _jsx(View, {\n            children: _jsx(FormInput, {\n              labelValue: kg,\n              onChangeText: function onChangeText(userkg) {\n                return setKg(userkg);\n              },\n              placeholderText: \"weight in kgs\",\n              iconType: \"infocircle\",\n              keyboardType: \"phone-pad\",\n              autoCapitalize: \"none\",\n              autoCorrect: false\n            })\n          }), _jsx(View, {\n            children: _jsx(FormInput, {\n              labelValue: ht,\n              onChangeText: function onChangeText(userwt) {\n                return setHt(userwt);\n              },\n              placeholderText: \"height in cm\",\n              iconType: \"infocirlce\",\n              keyboardType: \"phone-pad\",\n              autoCapitalize: \"none\",\n              autoCorrect: false\n            })\n          }), _jsx(View, {\n            children: _jsx(FormInput, {\n              labelValue: bg,\n              onChangeText: function onChangeText(userbg) {\n                return setBg(userbg);\n              },\n              placeholderText: \"Blood Group\",\n              iconType: \"infocirlce\",\n              keyboardType: \"phone-pad\",\n              autoCapitalize: \"none\",\n              autoCorrect: false\n            })\n          }), _jsx(View, {\n            style: {},\n            children: _jsx(TouchableOpacity, {\n              onPress: showDatePicker,\n              children: _jsxs(Text, {\n                style: {\n                  marginBottom: 15,\n                  fontSize: 14,\n                  marginTop: 10\n                },\n                children: [_jsx(Image, {\n                  source: require(\"../images/calendar.png\"),\n                  style: {\n                    resizeMode: \"contain\",\n                    height: 40,\n                    width: 40\n                  }\n                }), \"  \", \"Birth Date : \", date.toDateString()]\n              })\n            })\n          }), _jsx(View, {\n            style: {\n              padding: 10\n            },\n            children: _jsx(RadioGroup, {\n              radioButtons: radioButtons,\n              onPress: onPressRadioButton,\n              layout: \"row\"\n            })\n          }), _jsx(View, {\n            style: {\n              marginBottom: 25\n            },\n            children: _jsx(FormButton, {\n              buttonTitle: \"Submit\",\n              onPress: onhandlesubmit\n            })\n          })]\n        })]\n      })\n    })\n  });\n};\nexport default Adddetails;\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 20,\n    paddingTop: height * 0.1\n  },\n  logo: {\n    height: height * 0.25,\n    width: width * 0.6,\n    resizeMode: \"cover\",\n    marginTop: 50,\n    padding: 50,\n    alignContent: \"center\",\n    marginBottom: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  text: {\n    fontFamily: \"cursive\",\n    fontSize: 20,\n    marginBottom: 8,\n    color: \"#051d5f\"\n  },\n  navButton: {\n    marginBottom: 100,\n    color: \"#7D6E83\"\n  },\n  forgotButton: {\n    marginRight: width * 0.19,\n    marginBottom: 20,\n    fontSize: 13,\n    color: \"#402218\"\n  },\n  navButtonText: {\n    fontSize: 15,\n    fontWeight: \"500\",\n    paddingTop: 1000,\n    color: \"#402218\",\n    fontFamily: \"Lato-Regular\",\n    paddingBottom: 500,\n    paddingBottom: height * 0.2\n  },\n  profileContainer: {\n    width: width,\n    height: height,\n    padding: 0,\n    zIndex: 1\n  },\n  image: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingBottom: 20\n  }\n});\nvar styleSheet = StyleSheet.create({\n  MainContainer: {\n    flex: 1,\n    padding: 6,\n    alignItems: \"center\",\n    backgroundColor: \"white\"\n  },\n  text: {\n    fontSize: 15,\n    color: \"red\",\n    padding: 3,\n    marginBottom: 10,\n    textAlign: \"center\"\n  },\n  datePicker: {\n    justifyContent: \"center\",\n    alignItems: \"flex-start\",\n    width: 320,\n    height: 260,\n    display: \"flex\"\n  },\n  screenContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    padding: 16\n  },\n  appButtonContainer: {\n    elevation: 8,\n    backgroundColor: \"#009688\",\n    borderRadius: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 12\n  },\n  appButtonText: {\n    fontSize: 18,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  }\n});","map":{"version":3,"names":["React","Component","FormInput","FormButton","SocialButton","useState","DateTimePicker","Button","Radio","DatePicker","ImageBackground","Dimensions","RadioGroup","useNavigation","useNavigationParam","axios","jsx","_jsx","jsxs","_jsxs","img3","uri","radioButtonsData","id","label","value","_Dimensions$get","get","width","height","Adddetails","_ref","route","navigation","_useState","_useState2","_slicedToArray","phnumber","setPhnumber","_useState3","_useState4","address","setAddress","_useState5","_useState6","datePicker","setDatePicker","_useState7","_useState8","kg","setKg","_useState9","_useState10","ht","setHt","_useState11","_useState12","gen","setGen","_useState13","Date","_useState14","date","setDate","_useState15","_useState16","bg","setBg","onhandlesubmit","_ref2","_asyncToGenerator","e","hr","console","log","preventDefault","result","post","pid","name","phone","email","photolink","score","bDate","gender","weight","parseInt","substring","journal","status","navigate","_x","apply","arguments","showDatePicker","onDateSelected","event","_useState17","_useState18","radioButtons","setRadioButtons","onPressRadioButton","radioButtonsArray","selected","_route$params","params","ScrollView","children","source","resizeMode","style","justifyContent","imageStyle","borderRadius","View","alignItems","alignContent","Image","styles","logo","require","Text","textAlign","fontSize","paddingTop","labelValue","onChangeText","userPhnumber","placeholderText","iconType","keyboardType","autoCapitalize","autoCorrect","mode","display","Platform","OS","is24Hour","onChange","styleSheet","useradd","userkg","userwt","userbg","TouchableOpacity","onPress","marginBottom","marginTop","toDateString","padding","layout","buttonTitle","StyleSheet","create","container","text","fontFamily","color","navButton","forgotButton","marginRight","navButtonText","fontWeight","paddingBottom","profileContainer","zIndex","image","MainContainer","flex","backgroundColor","screenContainer","appButtonContainer","elevation","paddingVertical","paddingHorizontal","appButtonText","alignSelf","textTransform"],"sources":["D:/project/module/module/screens/Adddetails.js"],"sourcesContent":["import {\r\n  Image,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\nimport React from \"react\";\r\nimport { Component } from \"react\";\r\nimport FormInput from \"../components/FormInput\";\r\nimport FormButton from \"../components/FormButton\";\r\nimport SocialButton from \"../components/SocialButton\";\r\nimport { useState } from \"react\";\r\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\r\nimport { Button } from \"react-native\";\r\nimport Radio from \"../components/Radiobuttons\";\r\nimport DatePicker from \"react-native-datepicker\";\r\nimport { ImageBackground } from \"react-native\";\r\nimport { Dimensions } from \"react-native\";\r\nimport { RadioGroup } from \"react-native-radio-buttons-group\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useNavigationParam } from \"@react-navigation/native\";\r\nimport axios from \"axios\";\r\nconst img3 = { uri: \"https://i.ibb.co/WvcQTtK/imgbg.jpg\" };\r\n\r\n\r\n\r\nconst radioButtonsData = [\r\n  {\r\n    id: \"1\", // acts as primary key, should be unique and non-empty string\r\n    label: \"Male\",\r\n    value: \"M\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    label: \"Female\",\r\n    value: \"F\",\r\n  },\r\n];\r\n\r\nconst { width, height } = Dimensions.get(\"screen\");\r\n\r\n\r\nconst Adddetails = ({route,navigation }) => {\r\n // const [name, setName] = useState();\r\n  const [phnumber, setPhnumber] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  // const [email, setEmail] = useState();\r\n  const [datePicker, setDatePicker] = useState(false);\r\n  const [kg, setKg] = useState();\r\n  const [ht,setHt] = useState();\r\n  const [gen, setGen]= useState(null);\r\n  const [date, setDate] = useState(new Date());\r\n  const [bg, setBg] = useState();\r\n  \r\n\r\n  const onhandlesubmit=async(e)=>{\r\n    if(phnumber==null || address==null || kg==null || hr==null || gen==null || bg==null){\r\n      console.log(\"please enter all the details\")\r\n    }\r\n    else{\r\n    e.preventDefault();\r\n    const result = await axios.post(\"http://172.16.138.189:8080/pat/savedetail\"\r\n    ,{\r\n      pid:id,\r\n      name,\r\n      phone:phnumber,\r\n      address,\r\n      email,\r\n      photolink:null,\r\n      score:null,\r\n      bDate:null,\r\n      gender:gen,\r\n      weight:parseInt(kg.substring(0) , 10 ),\r\n      height:parseInt(ht.substring(0) , 10 ),\r\n      journal:null\r\n    })\r\n    //console.log(result);\r\n    if(result.status==200){\r\n      //console.log(result.data);\r\n      //setId(result.data);\r\n      navigation.navigate('Login');\r\n\r\n   }\r\n    \r\n    // const token=result.data;\r\n    // localStorage.setItem('jwtToken', token);\r\n    // const temp = localStorage.getItem('jwtToken');\r\n    // console.log(temp);\r\n    // console.log(result);\r\n  }\r\n};\r\n\r\n  \r\n\r\n  function showDatePicker() {\r\n    setDatePicker(true);\r\n  }\r\n\r\n  function onDateSelected(event, value) {\r\n    setDate(value);\r\n    setDatePicker(false);\r\n  }\r\n\r\n  const [radioButtons, setRadioButtons] = useState(radioButtonsData);\r\n\r\n  function onPressRadioButton(radioButtonsArray) {\r\n    setRadioButtons(radioButtonsArray);\r\n    //console.log(radioButtonsArray[0].selected==true);\r\n    if (radioButtonsArray[0].selected==true) {\r\n      setGen(1);\r\n    } else {\r\n      setGen(0);\r\n    }\r\n  }\r\n  //console.log(navigation);\r\n  const {id, name, email} = route.params;\r\n  return (\r\n    \r\n    \r\n    <ScrollView>\r\n      <ImageBackground\r\n        source={img3}\r\n        resizeMode=\"cover\"\r\n        style={{ justifyContent: \"center\" }}\r\n        imageStyle={{\r\n          width: width,\r\n          // opacity: 0.25,\r\n          height: height * 1.2,\r\n          borderRadius: 5,\r\n        }}\r\n      >\r\n        \r\n        <View>\r\n          <View\r\n            style={{\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              alignContent: \"center\",\r\n            }}\r\n          >\r\n            <Image\r\n              style={styles.logo}\r\n              source={require(\"../images/logoori.png\")}\r\n            />\r\n           \r\n          </View>\r\n          <Text style={{textAlign:'center', fontSize:20}}>Hi {name}! {'\\n'}Enter Your details </Text>\r\n          <View style={{ paddingTop: 20, alignItems: \"center\" }}>\r\n         \r\n      <View>\r\n        <FormInput\r\n          labelValue={phnumber}\r\n          onChangeText={(userPhnumber) => setPhnumber(userPhnumber)}\r\n          placeholderText=\"Contact Number\"\r\n          iconType=\"phone\"\r\n          keyboardType='phone-pad'\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n        />\r\n      </View>\r\n\r\n      <View>\r\n        {datePicker && (\r\n          <DateTimePicker\r\n            value={date}\r\n            mode={\"date\"}\r\n            display={Platform.OS === \"ios\" ? \"spinner\" : \"default\"}\r\n            is24Hour={true}\r\n            onChange={onDateSelected}\r\n            style={styleSheet.datePicker}\r\n          />\r\n        )}\r\n\r\n             </View>\r\n      <View>\r\n        <FormInput\r\n          labelValue={address}\r\n          onChangeText={(useradd) => setAddress(useradd)}\r\n          placeholderText=\"Address\"\r\n          iconType=\"home\"\r\n          keyboardType=\"address\"\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n        />\r\n      </View>\r\n      <View>\r\n        <FormInput\r\n          labelValue={kg}\r\n          onChangeText={(userkg) => setKg(userkg)}\r\n          placeholderText=\"weight in kgs\"\r\n          iconType=\"infocircle\"\r\n          keyboardType=\"phone-pad\"\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n        />\r\n      </View>\r\n      <View>\r\n        <FormInput\r\n          labelValue={ht}\r\n          onChangeText={(userwt) => setHt(userwt)}\r\n          placeholderText=\"height in cm\"\r\n          iconType=\"infocirlce\"\r\n          keyboardType=\"phone-pad\"\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n        />\r\n      </View>\r\n\r\n      <View>\r\n        <FormInput\r\n          labelValue={bg}\r\n          onChangeText={(userbg) => setBg(userbg)}\r\n          placeholderText=\"Blood Group\"\r\n          iconType=\"infocirlce\"\r\n          keyboardType=\"phone-pad\"\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n        />\r\n      </View>\r\n\r\n      <View style={{}}>\r\n        <TouchableOpacity onPress={showDatePicker}>\r\n          <Text style={{ marginBottom: 15, fontSize: 14, marginTop: 10 }}>\r\n            <Image\r\n              source={require(\"../images/calendar.png\")}\r\n              style={{ resizeMode: \"contain\", height: 40, width: 40 }}\r\n            ></Image>\r\n            {\"  \"}Birth Date : {date.toDateString()}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n              <View style={{ padding: 10 }}>\r\n                <RadioGroup\r\n                  radioButtons={radioButtons}\r\n                  onPress={onPressRadioButton}\r\n                  layout=\"row\"\r\n                />\r\n              </View>\r\n\r\n      <View style={{ marginBottom:25 }}>\r\n        <FormButton\r\n          buttonTitle=\"Submit\"\r\n          onPress={onhandlesubmit}\r\n        />\r\n      </View>\r\n              \r\n          </View>\r\n\r\n         \r\n        </View>\r\n      </ImageBackground>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default Adddetails;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n    paddingTop: height * 0.1,\r\n  },\r\n  logo: {\r\n    height: height * 0.25,\r\n    width: width * 0.6,\r\n    resizeMode: \"cover\",\r\n    marginTop: 50,\r\n    padding: 50,\r\n\r\n    alignContent: \"center\",\r\n    marginBottom: 20,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  text: {\r\n    fontFamily: \"cursive\",\r\n    fontSize: 20,\r\n    marginBottom: 8,\r\n    color: \"#051d5f\",\r\n  },\r\n  navButton: {\r\n    marginBottom: 100,\r\n    color: \"#7D6E83\",\r\n    // backgroundColor:'#FCFFE9',\r\n  },\r\n  forgotButton: {\r\n    //marginVertical: 5,\r\n\r\n    // marginBottom:height*.05,\r\n    marginRight: width * 0.19,\r\n    marginBottom: 20,\r\n    fontSize: 13,\r\n    color: \"#402218\",\r\n    // backgroundColor:'#FCFFE9',\r\n  },\r\n  navButtonText: {\r\n    fontSize: 15,\r\n    fontWeight: \"500\",\r\n    paddingTop: 1000,\r\n    color: \"#402218\",\r\n    fontFamily: \"Lato-Regular\",\r\n    paddingBottom: 500,\r\n    // backgroundColor:'#FCFFE9',\r\n    paddingBottom: height * 0.2,\r\n  },\r\n  profileContainer: {\r\n    width: width,\r\n    height: height,\r\n    padding: 0,\r\n    zIndex: 1,\r\n  },\r\n  image: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 20,\r\n\r\n    // backgroundColor:'#FCFFE9',\r\n  },\r\n});\r\n\r\nconst styleSheet = StyleSheet.create({\r\n  MainContainer: {\r\n    flex: 1,\r\n    padding: 6,\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n  },\r\n\r\n  text: {\r\n    fontSize: 15,\r\n    color: \"red\",\r\n    padding: 3,\r\n    marginBottom: 10,\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  // Style for iOS ONLY...\r\n  datePicker: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-start\",\r\n    width: 320,\r\n    height: 260,\r\n    display: \"flex\",\r\n  },\r\n\r\n  screenContainer: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    padding: 16,\r\n  },\r\n  appButtonContainer: {\r\n    elevation: 8,\r\n    backgroundColor: \"#009688\",\r\n    borderRadius: 10,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 12,\r\n  },\r\n  appButtonText: {\r\n    fontSize: 18,\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n    alignSelf: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}