{"ast":null,"code":"import{StatusBar}from'expo-status-bar';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import*as React from'react';import{NavigationContainer,useNavigation}from'@react-navigation/native';import{createNativeStackNavigator}from'@react-navigation/native-stack';import Button from\"react-native-web/dist/exports/Button\";import LoginScreen from\"./screens/LoginScreen\";import SignupScreen from\"./screens/Signupscreen\";import Adddetails from\"./screens/Adddetails\";import Dashboard from\"./screens/Dashboard\";import Questionnaire from\"./screens/Questionnaire\";import Taskmanager from\"./screens/Taskmanager\";import Startscrn from\"./screens/Startscrn\";import Startscrn2 from\"./screens/Startscrn2\";import Startscrn3 from\"./screens/Startscrn3\";import AsyncStorage from'@react-native-async-storage/async-storage';import'react-native-gesture-handler';import{useState,useEffect}from'react';import Bottombar from\"./components/Bottombar\";import LoadingScreen from\"./screens/LoadingScreen\";import Userprof from\"./screens/Userprof\";import Doctorinfo from\"./screens/Doctorinfo\";import Editprof from\"./screens/Editprof\";import Journalscrn from\"./screens/Journalscrn\";import Videoscrn from\"./screens/Videoscrn\";import Audioscrn from\"./screens/Audioscrn\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Stack=createNativeStackNavigator();var screenOptions={headerShown:false};export default function App(_ref){var navigation=_ref.navigation;var handleini=function handleini(){if(loggedin==true)return'Dashboard';else return'Login';};return _jsx(NavigationContainer,{children:_jsxs(Stack.Navigator,{screenOptions:screenOptions,initialRouteName:\"LoadingScreen\",children:[_jsx(Stack.Screen,{name:\"LoadingScreen\",component:LoadingScreen}),_jsx(Stack.Screen,{name:\"Dashboard\",component:Dashboard}),_jsx(Stack.Screen,{name:\"Doctorinfo\",component:Doctorinfo}),_jsx(Stack.Screen,{name:\"Startscrn\",component:Startscrn}),_jsx(Stack.Screen,{name:\"Startscrn2\",component:Startscrn2}),_jsx(Stack.Screen,{name:\"Startscrn3\",component:Startscrn3}),_jsx(Stack.Screen,{name:\"LoginScreen\",component:LoginScreen}),_jsx(Stack.Screen,{name:\"Adddetails\",component:Adddetails}),_jsx(Stack.Screen,{name:\"Signup\",component:SignupScreen,initialParams:'key'}),_jsx(Stack.Screen,{name:\"Questionnaire\",component:Questionnaire}),_jsx(Stack.Screen,{name:\"Taskmanager\",component:Taskmanager}),_jsx(Stack.Screen,{name:\"Editprof\",component:Editprof}),_jsx(Stack.Screen,{name:\"Userprof\",component:Userprof}),_jsx(Stack.Screen,{name:\"Journalscrn\",component:Journalscrn}),_jsx(Stack.Screen,{name:\"Videoscrn\",component:Videoscrn}),_jsx(Stack.Screen,{name:\"Audioscrn\",component:Audioscrn})]})});}var styles=StyleSheet.create({container:{flex:1,backgroundColor:'#fff',alignItems:'center',justifyContent:'center'}});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","React","NavigationContainer","useNavigation","createNativeStackNavigator","Button","LoginScreen","SignupScreen","Adddetails","Dashboard","Questionnaire","Taskmanager","Startscrn","Startscrn2","Startscrn3","AsyncStorage","useState","useEffect","Bottombar","LoadingScreen","Userprof","Doctorinfo","Editprof","Journalscrn","Videoscrn","Audioscrn","jsx","_jsx","jsxs","_jsxs","Stack","screenOptions","headerShown","App","_ref","navigation","handleini","loggedin","children","Navigator","initialRouteName","Screen","name","component","initialParams","styles","create","container","flex","backgroundColor","alignItems","justifyContent"],"sources":["D:/project/module/module/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\n//import Login from './screens/Login';\nimport * as React from 'react';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n//import LoginScreen from './screens/Login';\nimport { Button } from 'react-native';\nimport LoginScreen from './screens/LoginScreen';\nimport SignupScreen from './screens/Signupscreen';\nimport Adddetails from './screens/Adddetails';\nimport Dashboard from './screens/Dashboard';\nimport Questionnaire from './screens/Questionnaire';\nimport Taskmanager from './screens/Taskmanager';\nimport Startscrn from './screens/Startscrn';\nimport Startscrn2 from './screens/Startscrn2';\nimport Startscrn3 from './screens/Startscrn3';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport 'react-native-gesture-handler';\nimport { useState, useEffect } from 'react';\nimport Bottombar from './components/Bottombar';\nimport LoadingScreen from './screens/LoadingScreen';\n//import { createDrawerNavigator } from '@react-navigation/drawer';\nimport Userprof from './screens/Userprof';\nimport Doctorinfo from './screens/Doctorinfo';\nimport Editprof from './screens/Editprof';\nimport Journalscrn from './screens/Journalscrn';\nimport Videoscrn from './screens/Videoscrn';\nimport Audioscrn from './screens/Audioscrn';\n\nconst Stack = createNativeStackNavigator();\n\n\n\nconst screenOptions={\n  headerShown:false,\n\n};\n\n\nexport default function App({navigation}) {\n\n\n\n \n\n  const handleini=()=>{\n    if(loggedin==true) return ('Dashboard');\n    else return ('Login');\n  }\n\n  return  (\n\n    <NavigationContainer>\n\n      <Stack.Navigator screenOptions={screenOptions} initialRouteName='LoadingScreen'>\n        <Stack.Screen name=\"LoadingScreen\" component={LoadingScreen} />\n          <Stack.Screen name= \"Dashboard\" component={Dashboard} />\n          <Stack.Screen name= \"Doctorinfo\" component={Doctorinfo} />\n          <Stack.Screen name=\"Startscrn\" component={Startscrn} />\n          <Stack.Screen name=\"Startscrn2\" component={Startscrn2}/>\n          <Stack.Screen name='Startscrn3' component={Startscrn3} />\n          <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\n          <Stack.Screen name= \"Adddetails\" component={Adddetails} />\n          <Stack.Screen name= \"Signup\" component={SignupScreen} initialParams={'key'} />\n          <Stack.Screen name= \"Questionnaire\" component={Questionnaire} />\n          <Stack.Screen name= \"Taskmanager\" component={Taskmanager} />\n          <Stack.Screen name='Editprof' component={Editprof} />\n          <Stack.Screen name='Userprof' component={Userprof} />\n          <Stack.Screen name='Journalscrn' component={Journalscrn} />\n          <Stack.Screen name='Videoscrn' component={Videoscrn} />\n          <Stack.Screen name='Audioscrn' component={Audioscrn} />\n           </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}