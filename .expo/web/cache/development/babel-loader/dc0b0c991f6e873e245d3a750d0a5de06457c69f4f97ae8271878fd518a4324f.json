{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as React from 'react';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport SignupScreen from \"./screens/Signupscreen\";\nimport Adddetails from \"./screens/Adddetails\";\nimport Dashboard from \"./screens/Dashboard\";\nimport Questionnaire from \"./screens/Questionnaire\";\nimport Taskmanager from \"./screens/Taskmanager\";\nimport Startscrn from \"./screens/Startscrn\";\nimport Startscrn2 from \"./screens/Startscrn2\";\nimport Startscrn3 from \"./screens/Startscrn3\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport 'react-native-gesture-handler';\nimport { useState, useEffect } from 'react';\nimport Bottombar from \"./components/Bottombar\";\nimport LoadingScreen from \"./screens/LoadingScreen\";\nimport Userprof from \"./screens/Userprof\";\nimport Doctorinfo from \"./screens/Doctorinfo\";\nimport Editprof from \"./screens/Editprof\";\nimport Journalscrn from \"./screens/Journalscrn\";\nimport Videoscrn from \"./screens/Videoscrn\";\nimport Audioscrn from \"./screens/Audioscrn\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar screenOptions = {\n  headerShown: false\n};\nexport default function App(_ref) {\n  var navigation = _ref.navigation;\n  var handleini = function handleini() {\n    if (loggedin == true) return 'Dashboard';else return 'Login';\n  };\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: screenOptions,\n      initialRouteName: \"LoadingScreen\",\n      children: [_jsx(Stack.Screen, {\n        name: \"LoadingScreen\",\n        component: LoadingScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Dashboard\",\n        component: Dashboard\n      }), _jsx(Stack.Screen, {\n        name: \"Doctorinfo\",\n        component: Doctorinfo\n      }), _jsx(Stack.Screen, {\n        name: \"Startscrn\",\n        component: Startscrn\n      }), _jsx(Stack.Screen, {\n        name: \"Startscrn2\",\n        component: Startscrn2\n      }), _jsx(Stack.Screen, {\n        name: \"Startscrn3\",\n        component: Startscrn3\n      }), _jsx(Stack.Screen, {\n        name: \"LoginScreen\",\n        component: LoginScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Adddetails\",\n        component: Adddetails\n      }), _jsx(Stack.Screen, {\n        name: \"Signup\",\n        component: SignupScreen,\n        initialParams: 'key'\n      }), _jsx(Stack.Screen, {\n        name: \"Questionnaire\",\n        component: Questionnaire\n      }), _jsx(Stack.Screen, {\n        name: \"Taskmanager\",\n        component: Taskmanager\n      }), _jsx(Stack.Screen, {\n        name: \"Editprof\",\n        component: Editprof\n      }), _jsx(Stack.Screen, {\n        name: \"Userprof\",\n        component: Userprof\n      }), _jsx(Stack.Screen, {\n        name: \"Journalscrn\",\n        component: Journalscrn\n      }), _jsx(Stack.Screen, {\n        name: \"Videoscrn\",\n        component: Videoscrn\n      }), _jsx(Stack.Screen, {\n        name: \"Audioscrn\",\n        component: Audioscrn\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","React","NavigationContainer","useNavigation","createNativeStackNavigator","Button","LoginScreen","SignupScreen","Adddetails","Dashboard","Questionnaire","Taskmanager","Startscrn","Startscrn2","Startscrn3","AsyncStorage","useState","useEffect","Bottombar","LoadingScreen","Userprof","Doctorinfo","Editprof","Journalscrn","Videoscrn","Audioscrn","jsx","_jsx","jsxs","_jsxs","Stack","screenOptions","headerShown","App","_ref","navigation","handleini","loggedin","children","Navigator","initialRouteName","Screen","name","component","initialParams","styles","create","container","flex","backgroundColor","alignItems","justifyContent"],"sources":["D:/project/module/module/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\n//import Login from './screens/Login';\nimport * as React from 'react';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n//import LoginScreen from './screens/Login';\nimport { Button } from 'react-native';\nimport LoginScreen from './screens/LoginScreen';\nimport SignupScreen from './screens/Signupscreen';\nimport Adddetails from './screens/Adddetails';\nimport Dashboard from './screens/Dashboard';\nimport Questionnaire from './screens/Questionnaire';\nimport Taskmanager from './screens/Taskmanager';\nimport Startscrn from './screens/Startscrn';\nimport Startscrn2 from './screens/Startscrn2';\nimport Startscrn3 from './screens/Startscrn3';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport 'react-native-gesture-handler';\nimport { useState, useEffect } from 'react';\nimport Bottombar from './components/Bottombar';\nimport LoadingScreen from './screens/LoadingScreen';\n//import { createDrawerNavigator } from '@react-navigation/drawer';\nimport Userprof from './screens/Userprof';\nimport Doctorinfo from './screens/Doctorinfo';\nimport Editprof from './screens/Editprof';\nimport Journalscrn from './screens/Journalscrn';\nimport Videoscrn from './screens/Videoscrn';\nimport Audioscrn from './screens/Audioscrn';\n\nconst Stack = createNativeStackNavigator();\n\n\n\nconst screenOptions={\n  headerShown:false,\n\n};\n\n\nexport default function App({navigation}) {\n\n\n\n \n\n  const handleini=()=>{\n    if(loggedin==true) return ('Dashboard');\n    else return ('Login');\n  }\n\n  return  (\n\n    <NavigationContainer>\n\n      <Stack.Navigator screenOptions={screenOptions} initialRouteName='LoadingScreen'>\n        <Stack.Screen name=\"LoadingScreen\" component={LoadingScreen} />\n          <Stack.Screen name= \"Dashboard\" component={Dashboard} />\n          <Stack.Screen name= \"Doctorinfo\" component={Doctorinfo} />\n          <Stack.Screen name=\"Startscrn\" component={Startscrn} />\n          <Stack.Screen name=\"Startscrn2\" component={Startscrn2}/>\n          <Stack.Screen name='Startscrn3' component={Startscrn3} />\n          <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\n          <Stack.Screen name= \"Adddetails\" component={Adddetails} />\n          <Stack.Screen name= \"Signup\" component={SignupScreen} initialParams={'key'} />\n          <Stack.Screen name= \"Questionnaire\" component={Questionnaire} />\n          <Stack.Screen name= \"Taskmanager\" component={Taskmanager} />\n          <Stack.Screen name='Editprof' component={Editprof} />\n          <Stack.Screen name='Userprof' component={Userprof} />\n          <Stack.Screen name='Journalscrn' component={Journalscrn} />\n          <Stack.Screen name='Videoscrn' component={Videoscrn} />\n          <Stack.Screen name='Audioscrn' component={Audioscrn} />\n           </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}