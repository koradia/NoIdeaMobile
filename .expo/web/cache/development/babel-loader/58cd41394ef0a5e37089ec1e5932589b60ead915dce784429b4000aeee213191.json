{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button, Card, Checkbox, Paragraph, TextInput, Title } from \"react-native-paper\";\nimport Appbartab from \"../components/Appbartab\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { CheckBox } from \"@rneui/themed\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar Taskmanager = function Taskmanager(_ref) {\n  var navigation = _ref.navigation;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    check1 = _React$useState2[0],\n    setChecked1 = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    check2 = _React$useState4[0],\n    setChecked2 = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    check3 = _React$useState6[0],\n    setChecked3 = _React$useState6[1];\n  var _React$useState7 = React.useState(false),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    check4 = _React$useState8[0],\n    setChecked4 = _React$useState8[1];\n  var _React$useState9 = React.useState(false),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    check5 = _React$useState10[0],\n    setChecked5 = _React$useState10[1];\n  useEffect(function () {}, []);\n  var right = function right() {\n    return _jsx(Text, {\n      children: \"wert-\"\n    });\n  };\n  var arr = [[\"t1w\", \"soqwertyu\", \"false\"], [\"t2\", \"some\", \"true\"], [\"t1\", \"so\", \"false\"], [\"t1\", \"so\", \"true\"], [\"t1\", \"so\", \"false\"], [\"t1\", \"so\", \"true\"]];\n  var onpresshandle = function onpresshandle(id) {\n    if (id[2] == \"true\") id[2] = false;else id[2] = true;\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Appbartab, {}), _jsx(View, {\n      children: _jsxs(Text, {\n        style: styles.title,\n        children: [\"\\n\", \"Daily Goals\", \"\\n\"]\n      })\n    }), _jsx(ScrollView, {\n      children: _jsxs(View, {\n        style: {\n          alignItems: \"center\"\n        },\n        children: [arr.map(function (task) {\n          return _jsxs(Card, {\n            style: {\n              margin: 10,\n              backgroundColor: \"#dbe4c6\",\n              width: width * 0.8\n            },\n            children: [_jsx(Card.Title, {\n              title: task[0],\n              right: function right() {\n                return _jsx(CheckBox, {\n                  iconRight: true,\n                  containerStyle: {\n                    backgroundColor: \"#dbe4c6\",\n                    borderWidth: 0,\n                    backfaceVisibility: \"hidden\",\n                    padding: 8,\n                    borderRadius: 0\n                  },\n                  center: true,\n                  checked: task[2],\n                  textStyle: {\n                    fontSize: 15\n                  },\n                  onPress: onpresshandle(task[0])\n                });\n              }\n            }), _jsx(Card.Content, {\n              children: _jsx(Paragraph, {\n                children: task[1]\n              })\n            })]\n          });\n        }), _jsx(Text, {\n          children: \"\\n\"\n        })]\n      })\n    })]\n  });\n};\nexport default Taskmanager;\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 20,\n    paddingTop: 50\n  },\n  title: {\n    textAlign: \"center\",\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  pf: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignItems: \"flex-start\"\n  },\n  card: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 20,\n    paddingTop: 40,\n    width: 300,\n    textAlign: \"left\",\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  logo: {\n    height: 200,\n    width: 400,\n    resizeMode: \"cover\",\n    marginBottom: 20\n  },\n  text: {\n    fontFamily: \"\",\n    fontSize: 20,\n    marginBottom: 8,\n    textAlign: \"center\",\n    color: \"#051d5f\"\n  },\n  navButton: {\n    marginTop: 15\n  },\n  forgotButton: {\n    marginVertical: 35\n  },\n  datePickerStyle: {\n    width: 230\n  },\n  navButtonText: {\n    fontSize: 18,\n    fontWeight: \"500\",\n    color: \"#2e64e5\",\n    fontFamily: \"Lato-Regular\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","Button","Card","Checkbox","Paragraph","TextInput","Title","Appbartab","Dimensions","CheckBox","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","Taskmanager","_ref","navigation","_React$useState","_React$useState2","_slicedToArray","check1","setChecked1","_React$useState3","_React$useState4","check2","setChecked2","_React$useState5","_React$useState6","check3","setChecked3","_React$useState7","_React$useState8","check4","setChecked4","_React$useState9","_React$useState10","check5","setChecked5","right","Text","children","arr","onpresshandle","id","View","style","flex","styles","title","ScrollView","alignItems","map","task","margin","backgroundColor","iconRight","containerStyle","borderWidth","backfaceVisibility","padding","borderRadius","center","checked","textStyle","fontSize","onPress","Content","create","container","justifyContent","paddingTop","textAlign","fontWeight","pf","flexDirection","flexWrap","card","logo","resizeMode","marginBottom","text","fontFamily","color","navButton","marginTop","forgotButton","marginVertical","datePickerStyle","navButtonText"],"sources":["D:/project/module/module/screens/Taskmanager.js"],"sourcesContent":["import { View, Text, ScrollView } from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Checkbox,\r\n  Paragraph,\r\n  TextInput,\r\n  Title,\r\n} from \"react-native-paper\";\r\n//import Appbar from 'react-native-paper/lib/typescript/src/components/Appbar/Appbar'\r\nimport Appbartab from \"../components/Appbartab\";\r\nimport { Dimensions } from \"react-native\";\r\nimport { CheckBox } from \"@rneui/themed\";\r\nconst { width, height } = Dimensions.get(\"screen\");\r\nconst Taskmanager = ({ navigation }) => {\r\n  const [check1, setChecked1] = React.useState(false);\r\n  const [check2, setChecked2] = React.useState(false);\r\n  const [check3, setChecked3] = React.useState(false);\r\n  const [check4, setChecked4] = React.useState(false);\r\n  const [check5, setChecked5] = React.useState(false);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const right = () => <Text>wert-</Text>;\r\n\r\n  const arr = [\r\n    [\"t1w\", \"soqwertyu\", \"false\"],\r\n    [\"t2\", \"some\", \"true\"],\r\n    [\"t1\", \"so\", \"false\"],\r\n    [\"t1\", \"so\", \"true\"],\r\n    [\"t1\", \"so\", \"false\"],\r\n    [\"t1\", \"so\", \"true\"],\r\n  ];\r\n\r\n  const onpresshandle = (id) => {\r\n    if (id[2] == \"true\") id[2] = false;\r\n    else id[2] = true;\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <Appbartab />\r\n      <View>\r\n        <Text style={styles.title}>\r\n          {\"\\n\"}Daily Goals{\"\\n\"}\r\n        </Text>\r\n      </View>\r\n      <ScrollView>\r\n        <View style={{ alignItems: \"center\" }}>\r\n          {arr.map((task) => (\r\n            <Card\r\n              style={{\r\n                margin: 10,\r\n                //marginLeft: 25,\r\n                //marginRight: 25,\r\n                backgroundColor: \"#dbe4c6\",\r\n                width: width * 0.8,\r\n                //height:height*.1\r\n              }}\r\n            >\r\n              <Card.Title\r\n                title={task[0]}\r\n                right={() => (\r\n                  <CheckBox\r\n                    iconRight\r\n                    containerStyle={{\r\n                      backgroundColor: \"#dbe4c6\",\r\n                      borderWidth: 0,\r\n                      //borderColor:'black',\r\n                      backfaceVisibility: \"hidden\",\r\n                      padding: 8,\r\n                      borderRadius: 0,\r\n                    }}\r\n                    center\r\n                    // title=\"\"\r\n                    checked={task[2]}\r\n                    textStyle={{ fontSize: 15 }}\r\n                    onPress={onpresshandle(task[0])}\r\n                    // iconType=\"material-community\"\r\n                    //checkedIcon=\"clear\"\r\n                    //uncheckedIcon=\"clear\"\r\n                    //checkedColor=\"blue\"\r\n                    //size={1}\r\n                  />\r\n                )}\r\n              />\r\n              <Card.Content>\r\n                <Paragraph>{task[1]}</Paragraph>\r\n              </Card.Content>\r\n            </Card>\r\n          ))}\r\n          <Text>{\"\\n\"}</Text>\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Taskmanager;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n    paddingTop: 50,\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  pf: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  card: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n    paddingTop: 40,\r\n\r\n    width: 300,\r\n    textAlign: \"left\",\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  logo: {\r\n    height: 200,\r\n    width: 400,\r\n    resizeMode: \"cover\",\r\n    marginBottom: 20,\r\n  },\r\n  text: {\r\n    fontFamily: \"\",\r\n    fontSize: 20,\r\n    marginBottom: 8,\r\n    textAlign: \"center\",\r\n    color: \"#051d5f\",\r\n  },\r\n  navButton: {\r\n    marginTop: 15,\r\n  },\r\n  forgotButton: {\r\n    marginVertical: 35,\r\n  },\r\n  datePickerStyle: {\r\n    width: 230,\r\n  },\r\n  navButtonText: {\r\n    fontSize: 18,\r\n    fontWeight: \"500\",\r\n    color: \"#2e64e5\",\r\n    fontFamily: \"Lato-Regular\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}