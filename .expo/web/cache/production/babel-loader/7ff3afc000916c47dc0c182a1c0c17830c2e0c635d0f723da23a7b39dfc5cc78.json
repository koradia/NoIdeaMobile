{"ast":null,"code":"import PixelRatio from\"../Utilities/PixelRatio\";var cacheBreaker;var warnIfCacheBreakerUnset=true;export function pickScale(scales,deviceScale){if(deviceScale==null){deviceScale=PixelRatio.get();}for(var i=0;i<scales.length;i++){if(scales[i]>=deviceScale){return scales[i];}}return scales[scales.length-1]||1;}export function setUrlCacheBreaker(appendage){cacheBreaker=appendage;}export function getUrlCacheBreaker(){if(cacheBreaker==null){if(__DEV__&&warnIfCacheBreakerUnset){warnIfCacheBreakerUnset=false;console.warn('AssetUtils.getUrlCacheBreaker: Cache breaker value is unset');}return'';}return cacheBreaker;}","map":{"version":3,"names":["PixelRatio","cacheBreaker","warnIfCacheBreakerUnset","pickScale","scales","deviceScale","get","i","length","setUrlCacheBreaker","appendage","getUrlCacheBreaker","__DEV__","console","warn"],"sources":["D:/project/module/module/node_modules/react-native/Libraries/Image/AssetUtils.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport PixelRatio from '../Utilities/PixelRatio';\n\nlet cacheBreaker;\nlet warnIfCacheBreakerUnset = true;\n\nexport function pickScale(scales: Array<number>, deviceScale?: number): number {\n  if (deviceScale == null) {\n    deviceScale = PixelRatio.get();\n  }\n  // Packager guarantees that `scales` array is sorted\n  for (let i = 0; i < scales.length; i++) {\n    if (scales[i] >= deviceScale) {\n      return scales[i];\n    }\n  }\n\n  // If nothing matches, device scale is larger than any available\n  // scales, so we return the biggest one. Unless the array is empty,\n  // in which case we default to 1\n  return scales[scales.length - 1] || 1;\n}\n\nexport function setUrlCacheBreaker(appendage: string) {\n  cacheBreaker = appendage;\n}\n\nexport function getUrlCacheBreaker(): string {\n  if (cacheBreaker == null) {\n    if (__DEV__ && warnIfCacheBreakerUnset) {\n      warnIfCacheBreakerUnset = false;\n      console.warn(\n        'AssetUtils.getUrlCacheBreaker: Cache breaker value is unset',\n      );\n    }\n    return '';\n  }\n  return cacheBreaker;\n}\n"],"mappings":"AAUA,MAAO,CAAAA,UAAU,+BAEjB,GAAI,CAAAC,YAAY,CAChB,GAAI,CAAAC,uBAAuB,CAAG,IAAI,CAElC,MAAO,SAAS,CAAAC,SAASA,CAACC,MAAqB,CAAEC,WAAoB,CAAU,CAC7E,GAAIA,WAAW,EAAI,IAAI,CAAE,CACvBA,WAAW,CAAGL,UAAU,CAACM,GAAG,EAAE,CAChC,CAEA,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGH,MAAM,CAACI,MAAM,CAAED,CAAC,EAAE,CAAE,CACtC,GAAIH,MAAM,CAACG,CAAC,CAAC,EAAIF,WAAW,CAAE,CAC5B,MAAO,CAAAD,MAAM,CAACG,CAAC,CAAC,CAClB,CACF,CAKA,MAAO,CAAAH,MAAM,CAACA,MAAM,CAACI,MAAM,CAAG,CAAC,CAAC,EAAI,CAAC,CACvC,CAEA,MAAO,SAAS,CAAAC,kBAAkBA,CAACC,SAAiB,CAAE,CACpDT,YAAY,CAAGS,SAAS,CAC1B,CAEA,MAAO,SAAS,CAAAC,kBAAkBA,CAAA,CAAW,CAC3C,GAAIV,YAAY,EAAI,IAAI,CAAE,CACxB,GAAIW,OAAO,EAAIV,uBAAuB,CAAE,CACtCA,uBAAuB,CAAG,KAAK,CAC/BW,OAAO,CAACC,IAAI,CACV,6DAA6D,CAC9D,CACH,CACA,MAAO,EAAE,CACX,CACA,MAAO,CAAAb,YAAY,CACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}