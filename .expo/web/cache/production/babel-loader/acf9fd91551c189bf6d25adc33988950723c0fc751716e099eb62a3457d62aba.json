{"ast":null,"code":"'use strict';var _classCallCheck=require(\"@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"@babel/runtime/helpers/createClass\");var PixelRatio=require(\"../Utilities/PixelRatio\");var Platform=require(\"../Utilities/Platform\");var _require=require(\"./AssetUtils\"),pickScale=_require.pickScale;var _require2=require('@react-native/assets/path-support'),getAndroidResourceFolderName=_require2.getAndroidResourceFolderName,getAndroidResourceIdentifier=_require2.getAndroidResourceIdentifier,getBasePath=_require2.getBasePath;var invariant=require('invariant');function getScaledAssetPath(asset){var scale=pickScale(asset.scales,PixelRatio.get());var scaleSuffix=scale===1?'':'@'+scale+'x';var assetDir=getBasePath(asset);return assetDir+'/'+asset.name+scaleSuffix+'.'+asset.type;}function getAssetPathInDrawableFolder(asset){var scale=pickScale(asset.scales,PixelRatio.get());var drawableFolder=getAndroidResourceFolderName(asset,scale);var fileName=getAndroidResourceIdentifier(asset);return drawableFolder+'/'+fileName+'.'+asset.type;}var AssetSourceResolver=function(){function AssetSourceResolver(serverUrl,jsbundleUrl,asset){_classCallCheck(this,AssetSourceResolver);this.serverUrl=serverUrl;this.jsbundleUrl=jsbundleUrl;this.asset=asset;}_createClass(AssetSourceResolver,[{key:\"isLoadedFromServer\",value:function isLoadedFromServer(){return!!this.serverUrl;}},{key:\"isLoadedFromFileSystem\",value:function isLoadedFromFileSystem(){return!!(this.jsbundleUrl&&this.jsbundleUrl.startsWith('file://'));}},{key:\"defaultAsset\",value:function defaultAsset(){if(this.isLoadedFromServer()){return this.assetServerURL();}if(Platform.OS==='android'){return this.isLoadedFromFileSystem()?this.drawableFolderInBundle():this.resourceIdentifierWithoutScale();}else{return this.scaledAssetURLNearBundle();}}},{key:\"assetServerURL\",value:function assetServerURL(){invariant(!!this.serverUrl,'need server to load from');return this.fromSource(this.serverUrl+getScaledAssetPath(this.asset)+'?platform='+Platform.OS+'&hash='+this.asset.hash);}},{key:\"scaledAssetPath\",value:function scaledAssetPath(){return this.fromSource(getScaledAssetPath(this.asset));}},{key:\"scaledAssetURLNearBundle\",value:function scaledAssetURLNearBundle(){var path=this.jsbundleUrl||'file://';return this.fromSource(path+getScaledAssetPath(this.asset).replace(/\\.\\.\\//g,'_'));}},{key:\"resourceIdentifierWithoutScale\",value:function resourceIdentifierWithoutScale(){invariant(Platform.OS==='android','resource identifiers work on Android');return this.fromSource(getAndroidResourceIdentifier(this.asset));}},{key:\"drawableFolderInBundle\",value:function drawableFolderInBundle(){var path=this.jsbundleUrl||'file://';return this.fromSource(path+getAssetPathInDrawableFolder(this.asset));}},{key:\"fromSource\",value:function fromSource(source){return{__packager_asset:true,width:this.asset.width,height:this.asset.height,uri:source,scale:pickScale(this.asset.scales,PixelRatio.get())};}}]);return AssetSourceResolver;}();AssetSourceResolver.pickScale=pickScale;module.exports=AssetSourceResolver;","map":{"version":3,"names":["_classCallCheck","require","_createClass","PixelRatio","Platform","_require","pickScale","_require2","getAndroidResourceFolderName","getAndroidResourceIdentifier","getBasePath","invariant","getScaledAssetPath","asset","scale","scales","get","scaleSuffix","assetDir","name","type","getAssetPathInDrawableFolder","drawableFolder","fileName","AssetSourceResolver","serverUrl","jsbundleUrl","key","value","isLoadedFromServer","isLoadedFromFileSystem","startsWith","defaultAsset","assetServerURL","OS","drawableFolderInBundle","resourceIdentifierWithoutScale","scaledAssetURLNearBundle","fromSource","hash","scaledAssetPath","path","replace","source","__packager_asset","width","height","uri","module","exports"],"sources":["D:/project/module/module/node_modules/react-native/Libraries/Image/AssetSourceResolver.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nexport type ResolvedAssetSource = {|\n  +__packager_asset: boolean,\n  +width: ?number,\n  +height: ?number,\n  +uri: string,\n  +scale: number,\n|};\n\nimport type {PackagerAsset} from '@react-native/assets/registry';\n\nconst PixelRatio = require('../Utilities/PixelRatio');\nconst Platform = require('../Utilities/Platform');\nconst {pickScale} = require('./AssetUtils');\nconst {\n  getAndroidResourceFolderName,\n  getAndroidResourceIdentifier,\n  getBasePath,\n} = require('@react-native/assets/path-support');\nconst invariant = require('invariant');\n\n/**\n * Returns a path like 'assets/AwesomeModule/icon@2x.png'\n */\nfunction getScaledAssetPath(asset: PackagerAsset): string {\n  const scale = pickScale(asset.scales, PixelRatio.get());\n  const scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';\n  const assetDir = getBasePath(asset);\n  return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;\n}\n\n/**\n * Returns a path like 'drawable-mdpi/icon.png'\n */\nfunction getAssetPathInDrawableFolder(asset: PackagerAsset): string {\n  const scale = pickScale(asset.scales, PixelRatio.get());\n  const drawableFolder = getAndroidResourceFolderName(asset, scale);\n  const fileName = getAndroidResourceIdentifier(asset);\n  return drawableFolder + '/' + fileName + '.' + asset.type;\n}\n\nclass AssetSourceResolver {\n  serverUrl: ?string;\n  // where the jsbundle is being run from\n  jsbundleUrl: ?string;\n  // the asset to resolve\n  asset: PackagerAsset;\n\n  constructor(serverUrl: ?string, jsbundleUrl: ?string, asset: PackagerAsset) {\n    this.serverUrl = serverUrl;\n    this.jsbundleUrl = jsbundleUrl;\n    this.asset = asset;\n  }\n\n  isLoadedFromServer(): boolean {\n    return !!this.serverUrl;\n  }\n\n  isLoadedFromFileSystem(): boolean {\n    return !!(this.jsbundleUrl && this.jsbundleUrl.startsWith('file://'));\n  }\n\n  defaultAsset(): ResolvedAssetSource {\n    if (this.isLoadedFromServer()) {\n      return this.assetServerURL();\n    }\n\n    if (Platform.OS === 'android') {\n      return this.isLoadedFromFileSystem()\n        ? this.drawableFolderInBundle()\n        : this.resourceIdentifierWithoutScale();\n    } else {\n      return this.scaledAssetURLNearBundle();\n    }\n  }\n\n  /**\n   * Returns an absolute URL which can be used to fetch the asset\n   * from the devserver\n   */\n  assetServerURL(): ResolvedAssetSource {\n    invariant(!!this.serverUrl, 'need server to load from');\n    return this.fromSource(\n      this.serverUrl +\n        getScaledAssetPath(this.asset) +\n        '?platform=' +\n        Platform.OS +\n        '&hash=' +\n        this.asset.hash,\n    );\n  }\n\n  /**\n   * Resolves to just the scaled asset filename\n   * E.g. 'assets/AwesomeModule/icon@2x.png'\n   */\n  scaledAssetPath(): ResolvedAssetSource {\n    return this.fromSource(getScaledAssetPath(this.asset));\n  }\n\n  /**\n   * Resolves to where the bundle is running from, with a scaled asset filename\n   * E.g. 'file:///sdcard/bundle/assets/AwesomeModule/icon@2x.png'\n   */\n  scaledAssetURLNearBundle(): ResolvedAssetSource {\n    const path = this.jsbundleUrl || 'file://';\n    return this.fromSource(\n      // Assets can have relative paths outside of the project root.\n      // When bundling them we replace `../` with `_` to make sure they\n      // don't end up outside of the expected assets directory.\n      path + getScaledAssetPath(this.asset).replace(/\\.\\.\\//g, '_'),\n    );\n  }\n\n  /**\n   * The default location of assets bundled with the app, located by\n   * resource identifier\n   * The Android resource system picks the correct scale.\n   * E.g. 'assets_awesomemodule_icon'\n   */\n  resourceIdentifierWithoutScale(): ResolvedAssetSource {\n    invariant(\n      Platform.OS === 'android',\n      'resource identifiers work on Android',\n    );\n    return this.fromSource(getAndroidResourceIdentifier(this.asset));\n  }\n\n  /**\n   * If the jsbundle is running from a sideload location, this resolves assets\n   * relative to its location\n   * E.g. 'file:///sdcard/AwesomeModule/drawable-mdpi/icon.png'\n   */\n  drawableFolderInBundle(): ResolvedAssetSource {\n    const path = this.jsbundleUrl || 'file://';\n    return this.fromSource(path + getAssetPathInDrawableFolder(this.asset));\n  }\n\n  fromSource(source: string): ResolvedAssetSource {\n    return {\n      __packager_asset: true,\n      width: this.asset.width,\n      height: this.asset.height,\n      uri: source,\n      scale: pickScale(this.asset.scales, PixelRatio.get()),\n    };\n  }\n\n  static pickScale: (scales: Array<number>, deviceScale?: number) => number =\n    pickScale;\n}\n\nmodule.exports = AssetSourceResolver;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}