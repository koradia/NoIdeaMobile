{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { ActivityIndicator } from \"react-native-paper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar LoadingScreen = function LoadingScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loggedin = _useState2[0],\n    setLoggedin = _useState2[1];\n  var img3 = {\n    uri: \"https://i.ibb.co/WvcQTtK/imgbg.jpg\"\n  };\n  useEffect(function () {\n    console.log(\"on dash asfa\");\n    var onhandlestart = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var res = yield AsyncStorage.getItem(\"JWT\");\n        if (res != null) {\n          console.log(\"asadsdsdvergt vw weg efg etg ertd gert gf\");\n          console.log(res);\n          setLoggedin(true);\n          navigation.navigate('Dashboard');\n        } else {\n          if (!loggedin) {\n            var checkIfAlreadyLaunched = function () {\n              var _ref3 = _asyncToGenerator(function* () {\n                var res = yield AsyncStorage.getItem('alreadyLaunched');\n                console.log(res);\n                if (res === 'true') {\n                  navigation.navigate('Dashboard');\n                } else {\n                  navigation.navigate('Startscrn');\n                }\n              });\n              return function checkIfAlreadyLaunched() {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n            checkIfAlreadyLaunched();\n            console.log(\"heelo\");\n          }\n        }\n      });\n      return function onhandlestart() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    onhandlestart();\n  }, []);\n  return _jsx(View, {\n    style: {\n      height: height,\n      width: width\n    },\n    children: _jsx(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      children: _jsx(View, {\n        style: {\n          flex: 1,\n          width: width,\n          height: height\n        },\n        children: _jsx(ImageBackground, {\n          source: img3,\n          resizeMode: \"cover\",\n          style: {\n            flex: 1,\n            justifyContent: \"center\"\n          },\n          imageStyle: {\n            width: width,\n            height: height,\n            borderRadius: 5\n          },\n          children: _jsxs(Text, {\n            style: {\n              fontFamily: \"monospace\",\n              fontSize: 30,\n              padding: 10,\n              textAlign: \"center\",\n              color: \"black\",\n              fontWeight: \"400\",\n              fontStyle: \"italic\"\n            },\n            children: [\"Loading       \", _jsx(ActivityIndicator, {\n              animating: true,\n              color: 'purple'\n            })]\n          })\n        })\n      })\n    })\n  });\n};\nexport default LoadingScreen;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","Dimensions","AsyncStorage","useState","useEffect","ActivityIndicator","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","LoadingScreen","_ref","navigation","_useState","_useState2","_slicedToArray","loggedin","setLoggedin","img3","uri","console","log","onhandlestart","_ref2","_asyncToGenerator","res","getItem","navigate","checkIfAlreadyLaunched","_ref3","apply","arguments","View","style","children","flexDirection","flex","ImageBackground","source","resizeMode","justifyContent","imageStyle","borderRadius","Text","fontFamily","fontSize","padding","textAlign","color","fontWeight","fontStyle","animating","styles","StyleSheet","create"],"sources":["D:/project/module/module/screens/LoadingScreen.js"],"sourcesContent":["import {ImageBackground, StyleSheet, Text, View } from \"react-native\";\r\nimport React from \"react\";\r\nimport { Dimensions } from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { ActivityIndicator } from \"react-native-paper\";\r\n\r\nconst { width, height } = Dimensions.get(\"screen\");\r\n\r\nconst LoadingScreen = ({ navigation }) => {\r\n  const [loggedin, setLoggedin] = useState(false);\r\n\r\n  const img3 = { uri: \"https://i.ibb.co/WvcQTtK/imgbg.jpg\" };\r\n\r\n //taken from dashboard\r\n  useEffect(() => {\r\n    //AsyncStorage.clear();\r\n    console.log(\"on dash asfa\");\r\n    const onhandlestart = async () => {\r\n      const res = await AsyncStorage.getItem(\"JWT\");\r\n\r\n      if (res != null) {\r\n        console.log(\"asadsdsdvergt vw weg efg etg ertd gert gf\");\r\n        console.log(res);\r\n        //api cl=sll to validate\r\n        setLoggedin(true);\r\n        navigation.navigate('Dashboard');\r\n      } else {\r\n        if (!loggedin) {\r\n          //this taken form startscrn\r\n          const checkIfAlreadyLaunched = async ()=>{\r\n            const res = await AsyncStorage.getItem('alreadyLaunched');\r\n            console.log(res);\r\n            if(res==='true'){\r\n              //navigation.navigate('LoginScreen');\r\n              navigation.navigate('Dashboard')\r\n            }\r\n            else{\r\n              navigation.navigate('Startscrn')\r\n            }\r\n          }\r\n          checkIfAlreadyLaunched();\r\n          //ended scrn\r\n\r\n          console.log(\"heelo\");\r\n          //navigation.navigate(\"Startscrn\");\r\n        }\r\n      }\r\n    };\r\n    onhandlestart();\r\n    //if(loggedin==false) navigation.navigate('Login');\r\n  },[]);\r\n\r\n  return (\r\n    <View style={{ height: height, width: width, }}>\r\n      <View style={{ flexDirection: \"row\" }}>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            //padding: 10,\r\n            width: width,\r\n            height: height,\r\n          }}\r\n        >\r\n          <ImageBackground\r\n            source={img3}\r\n            resizeMode=\"cover\"\r\n            style={{ flex: 1, justifyContent: \"center\" }}\r\n            imageStyle={{\r\n              width: width,\r\n              // opacity: 0.25,\r\n              height: height,\r\n              borderRadius: 5,\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontFamily: \"monospace\",\r\n                fontSize: 30,\r\n                padding: 10,\r\n                textAlign: \"center\",\r\n                color: \"black\",\r\n                fontWeight: \"400\",\r\n                fontStyle: \"italic\",\r\n              }}\r\n            >\r\n             Loading       <ActivityIndicator animating={true} color={'purple'} />\r\n </Text>\r\n             \r\n          </ImageBackground>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default LoadingScreen;\r\n\r\nconst styles = StyleSheet.create({});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}