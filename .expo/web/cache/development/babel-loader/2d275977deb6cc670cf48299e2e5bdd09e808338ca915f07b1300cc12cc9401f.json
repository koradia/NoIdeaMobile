{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect } from 'react';\nimport { Appbar } from 'react-native-paper';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { useState } from 'react';\nimport { Url, getToken } from \"./config\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('screen'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar Appbartab = function Appbartab() {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  useEffect(function () {\n    var rendername = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var token = yield getToken();\n        console.log(token);\n        var nav = yield axios.post(Url + \"/patget/detail\", {}, {\n          headers: {\n            Authorization: token\n          }\n        }).catch(function (e) {\n          console.log(e);\n        });\n        console.log(nav.data);\n        setName(nav.data.name);\n      });\n      return function rendername() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    rendername();\n  });\n  return _jsx(View, {\n    style: {\n      marginTop: 25\n    },\n    children: _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        width: width,\n        padding: 5,\n        backgroundColor: '#222831',\n        paddingTop: 10,\n        paddingBottom: 10,\n        height: height * .065\n      },\n      children: [_jsx(Image, {\n        style: {\n          marginLeft: 10,\n          marginRight: 20,\n          width: 40,\n          height: 40,\n          borderRadius: 2,\n          marginTop: 0\n        },\n        source: require(\"../images/logoori.png\")\n      }), _jsxs(Text, {\n        style: styles.text,\n        children: [\"Hello \", name]\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {},\n        children: _jsx(Ionicons, {\n          name: \"md-notifications-outline\",\n          size: 25,\n          color: \"white\",\n          style: {\n            marginLeft: width * .34,\n            marginTop: 5\n          }\n        })\n      })]\n    })\n  });\n};\nexport default Appbartab;\nvar styles = StyleSheet.create({\n  container: {\n    fontFamily: 'Roboto',\n    backgroundColor: '#222831'\n  },\n  text: {\n    paddingTop: 5,\n    fontFamily: 'sans-serif-thin',\n    fontStyle: 'italic',\n    fontSize: 17,\n    color: 'white'\n  }\n});","map":{"version":3,"names":["React","useEffect","Appbar","Dimensions","Image","Ionicons","useState","Url","getToken","axios","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","Appbartab","_useState","_useState2","_slicedToArray","name","setName","rendername","_ref","_asyncToGenerator","token","console","log","nav","post","headers","Authorization","catch","e","data","apply","arguments","View","style","marginTop","children","flexDirection","padding","backgroundColor","paddingTop","paddingBottom","marginLeft","marginRight","borderRadius","source","require","Text","styles","text","TouchableOpacity","onPress","size","color","StyleSheet","create","container","fontFamily","fontStyle","fontSize"],"sources":["D:/project/module/module/components/Appbartab.js"],"sourcesContent":["import { StyleSheet, Text, Touchable, TouchableOpacity, View } from 'react-native'\r\nimport React, { useEffect } from 'react'\r\nimport { Appbar } from 'react-native-paper'\r\nimport { Dimensions } from 'react-native'\r\nimport { Image } from 'react-native';\r\n\r\nimport  Ionicons from 'react-native-vector-icons/Ionicons';\r\nimport { useState } from 'react';\r\nimport { Url, getToken } from './config';\r\nimport axios from 'axios';\r\nconst {width,height}=Dimensions.get('screen');\r\n\r\n\r\nconst Appbartab = () => {\r\n  const [name,setName]=useState();\r\n\r\n  useEffect(()=>{\r\n    const rendername = async() => {\r\n      \r\n      const token= await getToken();\r\n      console.log(token);\r\n      const nav = await axios.post(\r\n        Url + \"/patget/detail\",\r\n        {},\r\n        {headers: {\r\n            Authorization: token,\r\n          },\r\n        }\r\n      ).catch((e)=>{\r\n        console.log(e);\r\n\r\n      })\r\n      console.log(nav.data);\r\n      setName(nav.data.name)\r\n    }\r\n    rendername();\r\n\r\n  })\r\n  return (\r\n    \r\n     \r\n   <View style={{marginTop:25}}>\r\n   <View\r\n      style={{\r\n        flexDirection: \"row\",\r\n        width:width,\r\n        padding:5,\r\n        //justifyContent: \"space-between\",\r\n       \r\n        backgroundColor:'#222831',\r\n        \r\n        paddingTop:10,\r\n        paddingBottom:10,\r\n        height:height*.065,\r\n      }}\r\n    >\r\n       <Image  style={{\r\n            marginLeft:10,\r\n            marginRight:20,\r\n            width: 40,\r\n            height: 40,\r\n            borderRadius: 2,\r\n            marginTop: 0,\r\n          }}\r\n              //resizeMode={\"contain\"}\r\n              source={require('../images/logoori.png')}\r\n            />\r\n            <Text style={styles.text}>Hello {name}</Text>\r\n            <TouchableOpacity onPress={() => {}}>\r\n\r\n      <Ionicons\r\n          name='md-notifications-outline'\r\n          size={25}\r\n          color=\"white\"\r\n          \r\n          style={{marginLeft:width*.34, marginTop:5}}\r\n        />\r\n        </TouchableOpacity>\r\n            \r\n            \r\n    </View>\r\n    </View>\r\n//     <View style={{}} >\r\n//     <Appbar.Header style={styles.container}>\r\n//     {/* <Appbar.BackAction /> */}\r\n//     <Image  style={{\r\n//             marginLeft:20,\r\n//             marginRight:20,\r\n//             width: 40,\r\n//             height: 40,\r\n//             borderRadius: 2,\r\n//             marginTop: 0,\r\n//           }}\r\n//               //resizeMode={\"contain\"}\r\n//               source={require('../images/logoori.png')}\r\n//             />\r\n//     <Appbar.Content style={styles.text} titleStyle={styles.text} title='Hello Krutik,'></Appbar.Content>\r\n//     {/* <TouchableOpacity>\r\n//     <Appbar.Action icon=\"notification-clear-all\" size={30} color='white' />\r\n//     </TouchableOpacity> */}\r\n// </Appbar.Header>\r\n// </View>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Appbartab;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        fontFamily:'Roboto',\r\n        backgroundColor:'#222831',\r\n        //height:height*.06,\r\n\r\n        \r\n      },\r\n      text:{\r\n        paddingTop:5,\r\n        fontFamily:'sans-serif-thin',\r\n        fontStyle:'italic',\r\n        fontSize:17,\r\n        color:'white'\r\n      }\r\n\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}